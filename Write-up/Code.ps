%!PS-Adobe-3.0
%%BoundingBox: 24 24 571 818
%%Title: Enscript Output
%%For: 
%%Creator: GNU Enscript 1.6.6
%%CreationDate: Wed Oct  5 14:44:03 2016
%%Orientation: Landscape
%%Pages: (atend)
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset Enscript-Prolog 1.6 6
%
% Procedures.
%

/_S {	% save current state
  /_s save def
} def
/_R {	% restore from saved state
  _s restore
} def

/S {	% showpage protecting gstate
  gsave
  showpage
  grestore
} bind def

/MF {	% fontname newfontname -> -	make a new encoded font
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  % insert only valid encoding vectors
  encoding_vector length 256 eq {
    newfont /Encoding encoding_vector put
  } if

  newfontname newfont definefont pop
} def

/MF_PS { % fontname newfontname -> -	make a new font preserving its enc
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  newfontname newfont definefont pop
} def

/SF { % fontname width height -> -	set a new font
  /height exch def
  /width exch def

  findfont
  [width 0 0 height 0 0] makefont setfont
} def

/SUF { % fontname width height -> -	set a new user font
  /height exch def
  /width exch def

  /F-gs-user-font MF
  /F-gs-user-font width height SF
} def

/SUF_PS { % fontname width height -> -	set a new user font preserving its enc
  /height exch def
  /width exch def

  /F-gs-user-font MF_PS
  /F-gs-user-font width height SF
} def

/M {moveto} bind def
/s {show} bind def

/Box {	% x y w h -> -			define box path
  /d_h exch def /d_w exch def /d_y exch def /d_x exch def
  d_x d_y  moveto
  d_w 0 rlineto
  0 d_h rlineto
  d_w neg 0 rlineto
  closepath
} def

/bgs {	% x y height blskip gray str -> -	show string with bg color
  /str exch def
  /gray exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    gray setgray
    fill
  grestore
  x y M str s
} def

/bgcs { % x y height blskip red green blue str -> -  show string with bg color
  /str exch def
  /blue exch def
  /green exch def
  /red exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    red green blue setrgbcolor
    fill
  grestore
  x y M str s
} def

% Highlight bars.
/highlight_bars {	% nlines lineheight output_y_margin gray -> -
  gsave
    setgray
    /ymarg exch def
    /lineheight exch def
    /nlines exch def

    % This 2 is just a magic number to sync highlight lines to text.
    0 d_header_y ymarg sub 2 sub translate

    /cw d_output_w cols div def
    /nrows d_output_h ymarg 2 mul sub lineheight div cvi def

    % for each column
    0 1 cols 1 sub {
      cw mul /xp exch def

      % for each rows
      0 1 nrows 1 sub {
        /rn exch def
        rn lineheight mul neg /yp exch def
        rn nlines idiv 2 mod 0 eq {
	  % Draw highlight bar.  4 is just a magic indentation.
	  xp 4 add yp cw 8 sub lineheight neg Box fill
	} if
      } for
    } for

  grestore
} def

% Line highlight bar.
/line_highlight {	% x y width height gray -> -
  gsave
    /gray exch def
    Box gray setgray fill
  grestore
} def

% Column separator lines.
/column_lines {
  gsave
    .1 setlinewidth
    0 d_footer_h translate
    /cw d_output_w cols div def
    1 1 cols 1 sub {
      cw mul 0 moveto
      0 d_output_h rlineto stroke
    } for
  grestore
} def

% Column borders.
/column_borders {
  gsave
    .1 setlinewidth
    0 d_footer_h moveto
    0 d_output_h rlineto
    d_output_w 0 rlineto
    0 d_output_h neg rlineto
    closepath stroke
  grestore
} def

% Do the actual underlay drawing
/draw_underlay {
  ul_style 0 eq {
    ul_str true charpath stroke
  } {
    ul_str show
  } ifelse
} def

% Underlay
/underlay {	% - -> -
  gsave
    0 d_page_h translate
    d_page_h neg d_page_w atan rotate

    ul_gray setgray
    ul_font setfont
    /dw d_page_h dup mul d_page_w dup mul add sqrt def
    ul_str stringwidth pop dw exch sub 2 div ul_h_ptsize -2 div moveto
    draw_underlay
  grestore
} def

/user_underlay {	% - -> -
  gsave
    ul_x ul_y translate
    ul_angle rotate
    ul_gray setgray
    ul_font setfont
    0 0 ul_h_ptsize 2 div sub moveto
    draw_underlay
  grestore
} def

% Page prefeed
/page_prefeed {		% bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} def

% Wrapped line markers
/wrapped_line_mark {	% x y charwith charheight type -> -
  /type exch def
  /h exch def
  /w exch def
  /y exch def
  /x exch def

  type 2 eq {
    % Black boxes (like TeX does)
    gsave
      0 setlinewidth
      x w 4 div add y M
      0 h rlineto w 2 div 0 rlineto 0 h neg rlineto
      closepath fill
    grestore
  } {
    type 3 eq {
      % Small arrows
      gsave
        .2 setlinewidth
        x w 2 div add y h 2 div add M
        w 4 div 0 rlineto
        x w 4 div add y lineto stroke

        x w 4 div add w 8 div add y h 4 div add M
        x w 4 div add y lineto
	w 4 div h 8 div rlineto stroke
      grestore
    } {
      % do nothing
    } ifelse
  } ifelse
} def

% EPSF import.

/BeginEPSF {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack
  userdict begin
  /showpage { } def
  0 setgray 0 setlinecap
  1 setlinewidth 0 setlinejoin
  10 setmiterlimit [ ] 0 setdash newpath
  /languagelevel where {
    pop languagelevel
    1 ne {
      false setstrokeadjust false setoverprint
    } if
  } if
} bind def

/EndEPSF {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse
%%EndResource
%%BeginResource: procset Enscript-Encoding-88591 1.6 6
/encoding_vector [
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclam       	/quotedbl     	/numbersign   	
/dollar       	/percent      	/ampersand    	/quoteright   	
/parenleft    	/parenright   	/asterisk     	/plus         	
/comma        	/hyphen       	/period       	/slash        	
/zero         	/one          	/two          	/three        	
/four         	/five         	/six          	/seven        	
/eight        	/nine         	/colon        	/semicolon    	
/less         	/equal        	/greater      	/question     	
/at           	/A            	/B            	/C            	
/D            	/E            	/F            	/G            	
/H            	/I            	/J            	/K            	
/L            	/M            	/N            	/O            	
/P            	/Q            	/R            	/S            	
/T            	/U            	/V            	/W            	
/X            	/Y            	/Z            	/bracketleft  	
/backslash    	/bracketright 	/asciicircum  	/underscore   	
/quoteleft    	/a            	/b            	/c            	
/d            	/e            	/f            	/g            	
/h            	/i            	/j            	/k            	
/l            	/m            	/n            	/o            	
/p            	/q            	/r            	/s            	
/t            	/u            	/v            	/w            	
/x            	/y            	/z            	/braceleft    	
/bar          	/braceright   	/tilde        	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclamdown   	/cent         	/sterling     	
/currency     	/yen          	/brokenbar    	/section      	
/dieresis     	/copyright    	/ordfeminine  	/guillemotleft	
/logicalnot   	/hyphen       	/registered   	/macron       	
/degree       	/plusminus    	/twosuperior  	/threesuperior	
/acute        	/mu           	/paragraph    	/bullet       	
/cedilla      	/onesuperior  	/ordmasculine 	/guillemotright	
/onequarter   	/onehalf      	/threequarters	/questiondown 	
/Agrave       	/Aacute       	/Acircumflex  	/Atilde       	
/Adieresis    	/Aring        	/AE           	/Ccedilla     	
/Egrave       	/Eacute       	/Ecircumflex  	/Edieresis    	
/Igrave       	/Iacute       	/Icircumflex  	/Idieresis    	
/Eth          	/Ntilde       	/Ograve       	/Oacute       	
/Ocircumflex  	/Otilde       	/Odieresis    	/multiply     	
/Oslash       	/Ugrave       	/Uacute       	/Ucircumflex  	
/Udieresis    	/Yacute       	/Thorn        	/germandbls   	
/agrave       	/aacute       	/acircumflex  	/atilde       	
/adieresis    	/aring        	/ae           	/ccedilla     	
/egrave       	/eacute       	/ecircumflex  	/edieresis    	
/igrave       	/iacute       	/icircumflex  	/idieresis    	
/eth          	/ntilde       	/ograve       	/oacute       	
/ocircumflex  	/otilde       	/odieresis    	/divide       	
/oslash       	/ugrave       	/uacute       	/ucircumflex  	
/udieresis    	/yacute       	/thorn        	/ydieresis    	
] def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Courier
/HFpt_w 10 def
/HFpt_h 10 def
/Courier-Bold /HF-gs-font MF
/HF /HF-gs-font findfont [HFpt_w 0 0 HFpt_h 0 0] makefont def
/Courier /F-gs-font MF
/F-gs-font 7 7 SF
/#copies 1 def
% Pagedevice definitions:
gs_languagelevel 1 gt {
  <<
    /PageSize [595 842] 
  >> setpagedevice
} if
%%BeginResource: procset Enscript-Header-enscript 1.6 6
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Roman

% Fonts.
/Times-Bold /HeaderFont-Bold MF
/HeaderDateF /HeaderFont-Bold findfont 12 scalefont def

/Times-Roman /HeaderFont-Times MF
/HeaderHDRF /HeaderFont-Times findfont 14 scalefont def

/HeaderPageNumF /Helvetica-Bold findfont 28.8 scalefont def

/do_header {	% print enscript header
  gsave
    d_header_x d_header_y translate

    % light bar
    0 0 d_header_w d_header_h 2 div Box
    .95 setgray fill

    % dark gray boxes
    /dbw d_header_h 2 mul def	% dark box width
    /dbc .7 def			% dark box color

    % left dark box.
    0 0 dbw d_header_h Box
    dbc setgray fill

    0 setgray 
    HeaderDateF setfont
    moddatestr dup stringwidth pop dbw exch sub 2 div 
    d_header_h 2 div 2 add moveto show
    modtimestr dup stringwidth pop dbw exch sub 2 div 
    d_header_h 5 div moveto show

    % right dark box
    d_header_w dbw sub 0 dbw d_header_h Box
    dbc setgray fill

    HeaderPageNumF setfont
    1 setgray
    pagenumstr dup
    stringwidth pop dbw exch sub 2 div d_header_w dbw sub add
    d_header_h .2 mul moveto show

    % filename
    0 setgray 
    HeaderHDRF setfont
    d_header_w fname stringwidth pop sub 2 div d_header_h 8 div moveto
    fname show

    % user supplied header string.
    user_header_p {
      /h d_header_h 8 div 5 mul def

      % Implement strict enscript compatibility.
      user_header_center_str () eq user_header_right_str () eq and {
        d_header_w user_header_left_str stringwidth pop sub 2 div 
        h moveto user_header_left_str show
      } {
        dbw 5 add h moveto user_header_left_str show

        d_header_w user_header_center_str stringwidth pop sub 2 div 
        h moveto user_header_center_str show

	d_header_w dbw sub 5 sub user_header_right_str stringwidth pop
	sub h moveto user_header_right_str show
      } ifelse
    } if

  grestore
} def
%%EndResource
/d_page_w 794 def
/d_page_h 547 def
/d_header_x 0 def
/d_header_y 511 def
/d_header_w 794 def
/d_header_h 36 def
/d_footer_x 0 def
/d_footer_y 0 def
/d_footer_w 794 def
/d_footer_h 0 def
/d_output_w 794 def
/d_output_h 511 def
/cols 2 def
%%EndSetup
%%Page: (1) 1
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (BellBrandon_Midterm1.c) def
/fdir (.) def
/ftail (BellBrandon_Midterm1.c) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (10/05/16) def
/modtimestr (14:40:17) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
column_lines
do_header
/Courier-Oblique 7 7 SUF
5 501 M
(/* ) s
5 493 M
( * Brandon Bell) s
5 485 M
( * CSCI: 4576) s
5 477 M
( * Midterm 1: Conway's Game of Life. ) s
5 469 M
( * 10-5-16) s
5 461 M
( *) s
5 453 M
( * Popt was causeing my some frustrations so i grabbed a working example from) s
5 445 M
( * https://docs.fedoraproject.org/en-US/Fedora_Draft_Documentation/0.1/html/RPM_Guide/ch15s0) s
5 437 M
(2s04.html) s
5 429 M
( * and modified it to fit my needs.) s
5 421 M
( *) s
5 413 M
( * Additionaly, I barrowed the globals.h, pgm, and pprintf file provided on) s
5 405 M
( * moddle.) s
5 397 M
( *) s
5 389 M
( * TO-DO) s
5 381 M
( * -> Count Bugs) s
5 373 M
( *) s
5 365 M
( * -> Serial np=1 rules.) s
5 357 M
( * -> Block implementation) s
5 349 M
( * -> Rule implementation) s
5 341 M
( * ) s
5 333 M
( */) s
/F-gs-font 7 7 SF
5 317 M
(#) s
/Courier-Bold 7 7 SUF
9.2 317 M
(include) s
/F-gs-font 7 7 SF
38.6 317 M
( ) s
/Courier-Bold 7 7 SUF
42.8 317 M
(<stdio.h>) s
/F-gs-font 7 7 SF
5 309 M
(#) s
/Courier-Bold 7 7 SUF
9.2 309 M
(include) s
/F-gs-font 7 7 SF
38.6 309 M
( ) s
/Courier-Bold 7 7 SUF
42.8 309 M
(<string.h>) s
/F-gs-font 7 7 SF
5 301 M
(#) s
/Courier-Bold 7 7 SUF
9.2 301 M
(include) s
/F-gs-font 7 7 SF
38.6 301 M
( ) s
/Courier-Bold 7 7 SUF
42.8 301 M
(<stdlib.h>) s
/F-gs-font 7 7 SF
5 293 M
(#) s
/Courier-Bold 7 7 SUF
9.2 293 M
(include) s
/F-gs-font 7 7 SF
38.6 293 M
( ) s
/Courier-Bold 7 7 SUF
42.8 293 M
(<math.h>) s
/F-gs-font 7 7 SF
5 285 M
(#) s
/Courier-Bold 7 7 SUF
9.2 285 M
(include) s
/F-gs-font 7 7 SF
38.6 285 M
( ) s
/Courier-Bold 7 7 SUF
42.8 285 M
(<mpi.h>) s
/F-gs-font 7 7 SF
5 277 M
(#) s
/Courier-Bold 7 7 SUF
9.2 277 M
(include) s
/F-gs-font 7 7 SF
38.6 277 M
( ) s
/Courier-Bold 7 7 SUF
42.8 277 M
(<popt.h>) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 261 M
(// Include global variables. ) s
/F-gs-font 7 7 SF
5 253 M
(#) s
/Courier-Bold 7 7 SUF
9.2 253 M
(define) s
/F-gs-font 7 7 SF
34.4 253 M
( ) s
/Courier-Bold 7 7 SUF
38.6 253 M
(__MAIN) s
/F-gs-font 7 7 SF
63.8 253 M
( ) s
5 245 M
(#) s
/Courier-Bold 7 7 SUF
9.2 245 M
(include) s
/F-gs-font 7 7 SF
38.6 245 M
( ) s
/Courier-Bold 7 7 SUF
42.8 245 M
("globals.h") s
/F-gs-font 7 7 SF
5 237 M
(#) s
/Courier-Bold 7 7 SUF
9.2 237 M
(undef) s
/F-gs-font 7 7 SF
30.2 237 M
( ) s
/Courier-Bold 7 7 SUF
34.4 237 M
(__MAIN) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 221 M
(// User includes) s
/F-gs-font 7 7 SF
5 213 M
(#) s
/Courier-Bold 7 7 SUF
9.2 213 M
(include) s
/F-gs-font 7 7 SF
38.6 213 M
( ) s
/Courier-Bold 7 7 SUF
42.8 213 M
("pprintf.h") s
/F-gs-font 7 7 SF
5 205 M
(#) s
/Courier-Bold 7 7 SUF
9.2 205 M
(include) s
/F-gs-font 7 7 SF
38.6 205 M
( ) s
/Courier-Bold 7 7 SUF
42.8 205 M
("pgm.h") s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 189 M
(///////////////////////////////////////////////////////////////////////////) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 181 M
(// Global Variables. ) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 173 M
(///////////////////////////////////////////////////////////////////////////) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 157 M
(// MPI Variables) s
/F-gs-font 7 7 SF
/Courier-Bold 7 7 SUF
5 149 M
(int) s
/F-gs-font 7 7 SF
17.6 149 M
( rank;) s
/Courier-Bold 7 7 SUF
5 141 M
(int) s
/F-gs-font 7 7 SF
17.6 141 M
( np;) s
/Courier-Bold 7 7 SUF
5 133 M
(int) s
/F-gs-font 7 7 SF
17.6 133 M
( my_name_len;) s
/Courier-Bold 7 7 SUF
5 125 M
(char) s
/F-gs-font 7 7 SF
21.8 125 M
( my_name[255];) s
/Courier-Oblique 7 7 SUF
5 109 M
(// global verbose tag.) s
/F-gs-font 7 7 SF
/Courier-Bold 7 7 SUF
5 101 M
(int) s
/F-gs-font 7 7 SF
17.6 101 M
( verbose;) s
/Courier-Oblique 7 7 SUF
5 85 M
(///////////////////////////////////////////////////////////////////////////) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 77 M
(// Count Bugs:) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 69 M
(// Find the number of bugs alive in the processes peice of the world.) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 61 M
(//) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 53 M
(// Inputs:) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 45 M
(// - Ptr to the array for wich the bugs are to be counted.) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 37 M
(// - int representing the iteration the array represents.) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 29 M
(//) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 21 M
(// Results:) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 13 M
(// - Summs the bugs into a local variable and prints the result to stdout.) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 5 M
(///////////////////////////////////////////////////////////////////////////) s
/F-gs-font 7 7 SF
/Courier-Bold 7 7 SUF
402 501 M
(void) s
/F-gs-font 7 7 SF
418.8 501 M
( ) s
/Courier-Bold 7 7 SUF
423 501 M
(countBugs) s
/F-gs-font 7 7 SF
460.8 501 M
(\( ) s
/Courier-Bold 7 7 SUF
469.2 501 M
(int) s
/F-gs-font 7 7 SF
481.8 501 M
( *world, ) s
/Courier-Bold 7 7 SUF
519.6 501 M
(int) s
/F-gs-font 7 7 SF
532.2 501 M
( iteration \)) s
402 493 M
({) s
402 485 M
(    ) s
/Courier-Bold 7 7 SUF
418.8 485 M
(int) s
/F-gs-font 7 7 SF
431.4 485 M
( count = 0;) s
402 477 M
(    ) s
/Courier-Oblique 7 7 SUF
418.8 477 M
(// Loop variables.) s
/F-gs-font 7 7 SF
402 469 M
(    ) s
/Courier-Bold 7 7 SUF
418.8 469 M
(int) s
/F-gs-font 7 7 SF
431.4 469 M
( i;) s
402 461 M
(    ) s
/Courier-Oblique 7 7 SUF
418.8 461 M
(// hight and width of world minus any ghost rows/cols.) s
/F-gs-font 7 7 SF
402 453 M
(    ) s
/Courier-Bold 7 7 SUF
418.8 453 M
(int) s
/F-gs-font 7 7 SF
431.4 453 M
( width;    ) s
402 445 M
(    ) s
/Courier-Bold 7 7 SUF
418.8 445 M
(int) s
/F-gs-font 7 7 SF
431.4 445 M
( height;) s
402 429 M
(    ) s
/Courier-Oblique 7 7 SUF
418.8 429 M
(// determine if the world is parallelized. If the program is running) s
/F-gs-font 7 7 SF
402 421 M
(    ) s
/Courier-Oblique 7 7 SUF
418.8 421 M
(// serialy then there are no ghost rows and if it's running parallel then) s
/F-gs-font 7 7 SF
402 413 M
(    ) s
/Courier-Oblique 7 7 SUF
418.8 413 M
(// ghost rows need to be alloted for and not count to prevent double) s
/F-gs-font 7 7 SF
402 405 M
(    ) s
/Courier-Oblique 7 7 SUF
418.8 405 M
(// counting bugs. Set the loop variable ranges based on this information.) s
/F-gs-font 7 7 SF
402 389 M
(    ) s
/Courier-Oblique 7 7 SUF
418.8 389 M
(// The serial Case.) s
/F-gs-font 7 7 SF
402 381 M
(    ) s
/Courier-Bold 7 7 SUF
418.8 381 M
(if) s
/F-gs-font 7 7 SF
427.2 381 M
( \( np == 1 \)) s
402 373 M
(    {) s
402 365 M
(        width   = field_width;) s
402 357 M
(        height  = field_height;) s
402 349 M
(    }) s
402 341 M
(    ) s
/Courier-Oblique 7 7 SUF
418.8 341 M
(// The block distribution case.) s
/F-gs-font 7 7 SF
402 333 M
(    ) s
/Courier-Bold 7 7 SUF
418.8 333 M
(else) s
/F-gs-font 7 7 SF
435.6 333 M
( ) s
/Courier-Bold 7 7 SUF
439.8 333 M
(if) s
/F-gs-font 7 7 SF
448.2 333 M
( \( ncols == 1 && np > 1 \)) s
402 325 M
(    {) s
402 317 M
(        width   = field_width;) s
402 309 M
(        height  = field_height;) s
402 301 M
(        ) s
/Courier-Oblique 7 7 SUF
435.6 301 M
(//printf\("The count array address is %d, col %d, row %d\\n",world, ncols, nrows\);) s
/F-gs-font 7 7 SF
402 293 M
(    }) s
402 277 M
(    ) s
/Courier-Oblique 7 7 SUF
418.8 277 M
(// Count the bugs for a serial world. This gets me the known 26,301 bugs.) s
/F-gs-font 7 7 SF
402 269 M
(    ) s
/Courier-Bold 7 7 SUF
418.8 269 M
(for) s
/F-gs-font 7 7 SF
431.4 269 M
( \( i=\(width+1\); i<\( width*height - width -1 \); i++ \)) s
402 261 M
(    {) s
402 253 M
(        ) s
/Courier-Bold 7 7 SUF
435.6 253 M
(if) s
/F-gs-font 7 7 SF
444 253 M
( \( *\(world + i\) == 1 \)) s
402 245 M
(            count++;) s
402 237 M
(    }) s
402 229 M
(    ) s
/Courier-Oblique 7 7 SUF
418.8 229 M
(/* for \( i=0; i<\( width*height*sizeof\(int\) \); i++ \) */) s
/F-gs-font 7 7 SF
402 221 M
(    ) s
/Courier-Oblique 7 7 SUF
418.8 221 M
(/* { */) s
/F-gs-font 7 7 SF
402 213 M
(        ) s
/Courier-Oblique 7 7 SUF
435.6 213 M
(/* if \( *\(world + i\) == 1 \) */) s
/F-gs-font 7 7 SF
402 205 M
(            ) s
/Courier-Oblique 7 7 SUF
452.4 205 M
(/* count++; */) s
/F-gs-font 7 7 SF
402 197 M
(    ) s
/Courier-Oblique 7 7 SUF
418.8 197 M
(/* } */) s
/F-gs-font 7 7 SF
402 173 M
(    printf\() s
/Courier-Bold 7 7 SUF
448.2 173 M
("[ %d, %d , %d ]\\n") s
/F-gs-font 7 7 SF
528 173 M
(, rank, iteration, count\);) s
402 165 M
(}) s
/Courier-Bold 7 7 SUF
402 141 M
(int) s
/F-gs-font 7 7 SF
414.6 141 M
( ) s
/Courier-Bold 7 7 SUF
418.8 141 M
(main) s
/F-gs-font 7 7 SF
435.6 141 M
(\( ) s
/Courier-Bold 7 7 SUF
444 141 M
(int) s
/F-gs-font 7 7 SF
456.6 141 M
( argc, ) s
/Courier-Bold 7 7 SUF
486 141 M
(char) s
/F-gs-font 7 7 SF
502.8 141 M
(* argv[] \)) s
402 133 M
({) s
402 125 M
(    MPI_Status  status;) s
402 117 M
(    ) s
/Courier-Bold 7 7 SUF
418.8 117 M
(int) s
/F-gs-font 7 7 SF
431.4 117 M
( tag = 0;) s
402 109 M
(    ) s
/Courier-Oblique 7 7 SUF
418.8 109 M
(// Popt cmd line argument variables.) s
/F-gs-font 7 7 SF
402 101 M
(    ) s
/Courier-Bold 7 7 SUF
418.8 101 M
(int) s
/F-gs-font 7 7 SF
431.4 101 M
( iter_number  = 0;) s
402 93 M
(    ) s
/Courier-Bold 7 7 SUF
418.8 93 M
(int) s
/F-gs-font 7 7 SF
431.4 93 M
( count_alive  = 0;) s
402 85 M
(    ) s
/Courier-Bold 7 7 SUF
418.8 85 M
(int) s
/F-gs-font 7 7 SF
431.4 85 M
( block_type   = 0;) s
402 77 M
(    ) s
/Courier-Bold 7 7 SUF
418.8 77 M
(int) s
/F-gs-font 7 7 SF
431.4 77 M
( verbose      = 0;) s
402 69 M
(    ) s
/Courier-Bold 7 7 SUF
418.8 69 M
(int) s
/F-gs-font 7 7 SF
431.4 69 M
( async_comm   = 0;) s
402 61 M
(    ) s
/Courier-Bold 7 7 SUF
418.8 61 M
(int) s
/F-gs-font 7 7 SF
431.4 61 M
( checker_type = 0;) s
402 53 M
(    ) s
/Courier-Bold 7 7 SUF
418.8 53 M
(char) s
/F-gs-font 7 7 SF
435.6 53 M
(* filename   = ) s
/Courier-Bold 7 7 SUF
498.6 53 M
("") s
/F-gs-font 7 7 SF
507 53 M
(; ) s
402 37 M
(    ) s
/Courier-Oblique 7 7 SUF
418.8 37 M
(// Loop variables.) s
/F-gs-font 7 7 SF
402 29 M
(    ) s
/Courier-Bold 7 7 SUF
418.8 29 M
(int) s
/F-gs-font 7 7 SF
431.4 29 M
( i;) s
402 21 M
(    ) s
/Courier-Bold 7 7 SUF
418.8 21 M
(int) s
/F-gs-font 7 7 SF
431.4 21 M
( j;) s
402 5 M
(    ) s
/Courier-Oblique 7 7 SUF
418.8 5 M
(// Conways variables.) s
_R
S
%%Page: (2) 2
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 2 def
/fname (BellBrandon_Midterm1.c) def
/fdir (.) def
/ftail (BellBrandon_Midterm1.c) def
/Courier-Oblique 7 7 SUF
% User defined strings:
/pagenumstr (2) def
/moddatestr (10/05/16) def
/modtimestr (14:40:17) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
column_lines
do_header
/F-gs-font 7 7 SF
5 501 M
(    ) s
/Courier-Bold 7 7 SUF
21.8 501 M
(int) s
/F-gs-font 7 7 SF
34.4 501 M
( neighbors;) s
5 485 M
(    ) s
/Courier-Oblique 7 7 SUF
21.8 485 M
(///////////////////////////////////////////////////////////////////////////) s
/F-gs-font 7 7 SF
5 477 M
(    ) s
/Courier-Oblique 7 7 SUF
21.8 477 M
(// Parse the comand line arguments with Popt.) s
/F-gs-font 7 7 SF
5 469 M
(    ) s
/Courier-Oblique 7 7 SUF
21.8 469 M
(///////////////////////////////////////////////////////////////////////////) s
/F-gs-font 7 7 SF
5 461 M
(    ) s
/Courier-Bold 7 7 SUF
21.8 461 M
(struct) s
/F-gs-font 7 7 SF
47 461 M
( poptOption optionsTable[] = ) s
5 453 M
(    {) s
5 445 M
(    {) s
/Courier-Bold 7 7 SUF
26 445 M
("interations") s
/F-gs-font 7 7 SF
80.6 445 M
(,   ) s
/Courier-Bold 7 7 SUF
97.4 445 M
('i') s
/F-gs-font 7 7 SF
110 445 M
(,  POPT_ARG_INT,    &iter_number,  0, ) s
/Courier-Bold 7 7 SUF
269.6 445 M
("Set the number of world iter) s
5 437 M
(ations.") s
/F-gs-font 7 7 SF
38.6 437 M
(, ) s
/Courier-Bold 7 7 SUF
47 437 M
("2, 3, ... n") s
/F-gs-font 7 7 SF
101.6 437 M
( },) s
5 429 M
(    {) s
/Courier-Bold 7 7 SUF
26 429 M
("count-alive") s
/F-gs-font 7 7 SF
80.6 429 M
(,   ) s
/Courier-Bold 7 7 SUF
97.4 429 M
('c') s
/F-gs-font 7 7 SF
110 429 M
(,  POPT_ARG_INT,    &count_alive,  0, ) s
/Courier-Bold 7 7 SUF
269.6 429 M
("Specifiy the iteration after) s
5 421 M
( which to count bugs.") s
/F-gs-font 7 7 SF
97.4 421 M
( , NULL },) s
5 413 M
(    {) s
/Courier-Bold 7 7 SUF
26 413 M
("verbose") s
/F-gs-font 7 7 SF
63.8 413 M
(,       ) s
/Courier-Bold 7 7 SUF
97.4 413 M
('v') s
/F-gs-font 7 7 SF
110 413 M
(,  POPT_ARG_NONE,   &verbose,      0, ) s
/Courier-Bold 7 7 SUF
269.6 413 M
("set verbose level to 1.") s
/F-gs-font 7 7 SF
374.6 413 M
( , N) s
5 405 M
(ULL },) s
5 397 M
(    {) s
/Courier-Bold 7 7 SUF
26 397 M
("block") s
/F-gs-font 7 7 SF
55.4 397 M
(,         ) s
/Courier-Bold 7 7 SUF
97.4 397 M
('b') s
/F-gs-font 7 7 SF
110 397 M
(,  POPT_ARG_NONE,   &block_type,   0, ) s
/Courier-Bold 7 7 SUF
269.6 397 M
("Set the process distribution) s
5 389 M
( to block type.") s
/F-gs-font 7 7 SF
72.2 389 M
(, NULL },) s
5 381 M
(    {) s
/Courier-Bold 7 7 SUF
26 381 M
("async-comm") s
/F-gs-font 7 7 SF
76.4 381 M
(,    NULL, POPT_ARG_NONE,   &async_comm,   0, ) s
/Courier-Bold 7 7 SUF
269.6 381 M
("Set the communication type t) s
5 373 M
(o asyncronous.") s
/F-gs-font 7 7 SF
68 373 M
(, NULL },) s
5 365 M
(    {) s
/Courier-Bold 7 7 SUF
26 365 M
("checker-board") s
/F-gs-font 7 7 SF
89 365 M
(, NULL, POPT_ARG_NONE,   &checker_type, 0, ) s
/Courier-Bold 7 7 SUF
269.6 365 M
("Set the process distribution) s
5 357 M
( to checker board type.") s
/F-gs-font 7 7 SF
105.8 357 M
(, NULL },) s
5 349 M
(    {) s
/Courier-Bold 7 7 SUF
26 349 M
("filename") s
/F-gs-font 7 7 SF
68 349 M
(,      ) s
/Courier-Bold 7 7 SUF
97.4 349 M
('f') s
/F-gs-font 7 7 SF
110 349 M
(,  POPT_ARG_STRING, &filename,     0, ) s
/Courier-Bold 7 7 SUF
269.6 349 M
("Set the name of the world fi) s
5 341 M
(le to read.") s
/F-gs-font 7 7 SF
55.4 341 M
(, ) s
/Courier-Bold 7 7 SUF
63.8 341 M
("*.pgm") s
/F-gs-font 7 7 SF
93.2 341 M
( },) s
5 333 M
(    POPT_AUTOALIAS) s
5 325 M
(    POPT_AUTOHELP) s
5 317 M
(    POPT_TABLEEND) s
5 309 M
(    };) s
5 301 M
(    poptContext context = poptGetContext\( ) s
/Courier-Bold 7 7 SUF
181.4 301 M
("popt1") s
/F-gs-font 7 7 SF
210.8 301 M
(, argc, argv, &optionsTable, 0\);) s
5 293 M
(    ) s
/Courier-Bold 7 7 SUF
21.8 293 M
(int) s
/F-gs-font 7 7 SF
34.4 293 M
( option          = poptGetNextOpt\(context\);) s
5 277 M
(    ) s
/Courier-Oblique 7 7 SUF
21.8 277 M
(// Handle verbose output of command line arguments if v switch set. ) s
/F-gs-font 7 7 SF
5 269 M
(    ) s
/Courier-Bold 7 7 SUF
21.8 269 M
(if) s
/F-gs-font 7 7 SF
30.2 269 M
( \( verbose == 1 \)) s
5 261 M
(    {) s
5 253 M
(        printf\() s
/Courier-Bold 7 7 SUF
68 253 M
("option = %d\\n") s
/F-gs-font 7 7 SF
131 253 M
(, option\);) s
5 245 M
(        printf\() s
/Courier-Bold 7 7 SUF
68 245 M
("After processing, options have values:\\n") s
/F-gs-font 7 7 SF
244.4 245 M
(\);) s
5 237 M
(        printf\() s
/Courier-Bold 7 7 SUF
68 237 M
("\\t iterations holds %d\\n") s
/F-gs-font 7 7 SF
177.2 237 M
(, iter_number\);) s
5 229 M
(        printf\() s
/Courier-Bold 7 7 SUF
68 229 M
("\\t count_alive holds %d\\n") s
/F-gs-font 7 7 SF
181.4 229 M
(, count_alive\);) s
5 221 M
(        printf\() s
/Courier-Bold 7 7 SUF
68 221 M
("\\t block flag holds %d\\n") s
/F-gs-font 7 7 SF
177.2 221 M
(, block_type\);) s
5 213 M
(        printf\() s
/Courier-Bold 7 7 SUF
68 213 M
("\\t verbose flag holds %d\\n") s
/F-gs-font 7 7 SF
185.6 213 M
(, verbose\);) s
5 205 M
(        printf\() s
/Courier-Bold 7 7 SUF
68 205 M
("\\t checker flag holds %d\\n") s
/F-gs-font 7 7 SF
185.6 205 M
(, checker_type\);) s
5 197 M
(        printf\() s
/Courier-Bold 7 7 SUF
68 197 M
("\\t async_comm flag holds %d\\n") s
/F-gs-font 7 7 SF
198.2 197 M
(, async_comm\);) s
5 189 M
(        printf\() s
/Courier-Bold 7 7 SUF
68 189 M
("\\t filename holds [%s]\\n") s
/F-gs-font 7 7 SF
177.2 189 M
(, filename\);) s
5 181 M
(    }) s
5 165 M
(    ) s
/Courier-Oblique 7 7 SUF
21.8 165 M
(///////////////////////////////////////////////////////////////////////////) s
/F-gs-font 7 7 SF
5 157 M
(    ) s
/Courier-Oblique 7 7 SUF
21.8 157 M
(// Initialize MPI and retreive world size, p's rank, and p's node name.) s
/F-gs-font 7 7 SF
5 149 M
(    ) s
/Courier-Oblique 7 7 SUF
21.8 149 M
(///////////////////////////////////////////////////////////////////////////) s
/F-gs-font 7 7 SF
5 141 M
(    MPI_Init\(&argc, &argv\);) s
5 133 M
(    MPI_Comm_size\(MPI_COMM_WORLD, &np\);) s
5 125 M
(    MPI_Comm_rank\(MPI_COMM_WORLD, &rank\);) s
5 117 M
(    MPI_Get_processor_name\(my_name,&my_name_len\);) s
5 109 M
(    ) s
/Courier-Oblique 7 7 SUF
21.8 109 M
(// Verbose output of basic MPI process information.) s
/F-gs-font 7 7 SF
5 101 M
(    ) s
/Courier-Bold 7 7 SUF
21.8 101 M
(if) s
/F-gs-font 7 7 SF
30.2 101 M
( \( verbose == 1 \)) s
5 93 M
(        printf\() s
/Courier-Bold 7 7 SUF
68 93 M
("[ %s, %d ] World size = %d\\n") s
/F-gs-font 7 7 SF
194 93 M
(, my_name, rank, np\);) s
5 69 M
(    ) s
/Courier-Oblique 7 7 SUF
21.8 69 M
(///////////////////////////////////////////////////////////////////////////) s
/F-gs-font 7 7 SF
5 61 M
(    ) s
/Courier-Oblique 7 7 SUF
21.8 61 M
(// Set-up the MPI and conways variables based on partition scheme being used ) s
/F-gs-font 7 7 SF
5 53 M
(    ) s
/Courier-Oblique 7 7 SUF
21.8 53 M
(// and read the starting world file. ) s
/F-gs-font 7 7 SF
5 45 M
(    ) s
/Courier-Oblique 7 7 SUF
21.8 45 M
(///////////////////////////////////////////////////////////////////////////) s
/F-gs-font 7 7 SF
5 29 M
(    ) s
/Courier-Oblique 7 7 SUF
21.8 29 M
(// Make sure that only partition type is specified.) s
/F-gs-font 7 7 SF
5 21 M
(    ) s
/Courier-Bold 7 7 SUF
21.8 21 M
(if) s
/F-gs-font 7 7 SF
30.2 21 M
( \( checker_type == 1 && block_type == 1 \)) s
5 13 M
(    {) s
5 5 M
(        ) s
/Courier-Bold 7 7 SUF
38.6 5 M
(if) s
/F-gs-font 7 7 SF
47 5 M
( \( rank == 0 \)) s
402 501 M
(        {) s
402 493 M
(            printf\() s
/Courier-Bold 7 7 SUF
481.8 493 M
(" => [ERROR] more than one partition scheme specified.\\n") s
/F-gs-font 7 7 SF
721.2 493 M
(\);) s
402 485 M
(        }) s
402 477 M
(        ) s
/Courier-Oblique 7 7 SUF
435.6 477 M
(// Call finalize before quiting, it's just good manners.) s
/F-gs-font 7 7 SF
402 469 M
(        MPI_Finalize\(\);) s
402 461 M
(        ) s
/Courier-Bold 7 7 SUF
435.6 461 M
(return) s
/F-gs-font 7 7 SF
460.8 461 M
( 1;) s
402 453 M
(    }) s
402 445 M
(    ) s
/Courier-Oblique 7 7 SUF
418.8 445 M
(// set ncol and nrows for the serial case.) s
/F-gs-font 7 7 SF
402 437 M
(    ) s
/Courier-Bold 7 7 SUF
418.8 437 M
(if) s
/F-gs-font 7 7 SF
427.2 437 M
( \( np == 1 \)) s
402 429 M
(    {) s
402 421 M
(        ncols = 1;) s
402 413 M
(        nrows = 1;) s
402 405 M
(    }) s
402 397 M
(    ) s
/Courier-Oblique 7 7 SUF
418.8 397 M
(// set ncol and n rows for the block distribution case.) s
/F-gs-font 7 7 SF
402 389 M
(    ) s
/Courier-Bold 7 7 SUF
418.8 389 M
(else) s
/F-gs-font 7 7 SF
435.6 389 M
( ) s
/Courier-Bold 7 7 SUF
439.8 389 M
(if) s
/F-gs-font 7 7 SF
448.2 389 M
( \( block_type == 1  \)) s
402 381 M
(    {) s
402 373 M
(        my_row = rank;) s
402 365 M
(        ) s
/Courier-Oblique 7 7 SUF
435.6 365 M
(//my_col = 1;) s
/F-gs-font 7 7 SF
402 357 M
(        ncols = 1;) s
402 349 M
(        nrows = np;) s
402 333 M
(        ) s
/Courier-Oblique 7 7 SUF
435.6 333 M
(///////////////////////////////////////////////////////////////////////////) s
/F-gs-font 7 7 SF
402 325 M
(        ) s
/Courier-Oblique 7 7 SUF
435.6 325 M
(// Syncroness exchange of ghost rows.) s
/F-gs-font 7 7 SF
402 317 M
(        ) s
/Courier-Oblique 7 7 SUF
435.6 317 M
(// The top row sends first and all the other processes recv first.) s
/F-gs-font 7 7 SF
402 309 M
(        ) s
/Courier-Oblique 7 7 SUF
435.6 309 M
(///////////////////////////////////////////////////////////////////////////) s
/F-gs-font 7 7 SF
402 301 M
(        ) s
/Courier-Oblique 7 7 SUF
435.6 301 M
(// If top p.) s
/F-gs-font 7 7 SF
402 293 M
(        ) s
/Courier-Bold 7 7 SUF
435.6 293 M
(if) s
/F-gs-font 7 7 SF
444 293 M
( \(rank == 0 \)) s
402 285 M
(        {) s
402 277 M
(            ) s
/Courier-Oblique 7 7 SUF
452.4 277 M
(// send the bottom gohst row to next p.) s
/F-gs-font 7 7 SF
402 269 M
(            MPI_Send\( \(field_a + field_width*field_height - 2*field_width -1 \),) s
402 261 M
(                       field_width, MPI_INT, rank+1, tag, MPI_COMM_WORLD \);) s
402 253 M
(            MPI_Recv\( \(field_a + field_width*field_height - 2*field_width -1\), ) s
402 245 M
(                       field_width, MPI_INT, rank+1, tag, MPI_COMM_WORLD, &status \);) s
402 237 M
(        }) s
402 221 M
(        ) s
/Courier-Oblique 7 7 SUF
435.6 221 M
(// If bottom p.) s
/F-gs-font 7 7 SF
402 213 M
(        ) s
/Courier-Bold 7 7 SUF
435.6 213 M
(else) s
/F-gs-font 7 7 SF
452.4 213 M
( ) s
/Courier-Bold 7 7 SUF
456.6 213 M
(if) s
/F-gs-font 7 7 SF
465 213 M
( \(rank == np-1 \)) s
402 205 M
(        {) s
402 197 M
(            ) s
/Courier-Oblique 7 7 SUF
452.4 197 M
(// Send the top row to gohst row of above block and recv into top gohst // row.) s
/F-gs-font 7 7 SF
402 189 M
(            MPI_Send\( \(field_a + 2*field_width -1 \),) s
402 181 M
(                       field_width, MPI_INT, rank-1, tag, MPI_COMM_WORLD \);) s
402 173 M
(            MPI_Recv\( \(field_a + 2*field_width -1\), ) s
402 165 M
(                       field_width, MPI_INT, rank-1, tag, MPI_COMM_WORLD, &status \);) s
402 157 M
(        }) s
402 141 M
(        ) s
/Courier-Oblique 7 7 SUF
435.6 141 M
(// for the non edge processes.) s
/F-gs-font 7 7 SF
402 133 M
(        ) s
/Courier-Bold 7 7 SUF
435.6 133 M
(else) s
/F-gs-font 7 7 SF
402 125 M
(        {) s
402 117 M
(            ) s
/Courier-Oblique 7 7 SUF
452.4 117 M
(// Send the top row to gohst row of above block and recv into top gohst // row.) s
/F-gs-font 7 7 SF
402 109 M
(            MPI_Recv\( \(field_a + field_width*field_height - 2*field_width -1\), ) s
402 101 M
(                       field_width, MPI_INT, rank-1, tag, MPI_COMM_WORLD, &status \);) s
402 93 M
(            MPI_Send\( \(field_a + 2*field_width -1 \),) s
402 85 M
(                       field_width, MPI_INT, rank-1, tag, MPI_COMM_WORLD \);) s
402 77 M
(            ) s
/Courier-Oblique 7 7 SUF
452.4 77 M
(// send the bottom gohst row to next p.) s
/F-gs-font 7 7 SF
402 69 M
(            MPI_Send\( \(field_a + field_width*field_height - 2*field_width -1 \),) s
402 61 M
(                       field_width, MPI_INT, rank+1, tag, MPI_COMM_WORLD \);) s
402 53 M
(            MPI_Recv\( \(field_a + field_width*field_height - 2*field_width -1\), ) s
402 45 M
(                       field_width, MPI_INT, rank+1, tag, MPI_COMM_WORLD, &status \);) s
402 37 M
(        }) s
402 29 M
(    }) s
402 21 M
(    ) s
/Courier-Bold 7 7 SUF
418.8 21 M
(else) s
/F-gs-font 7 7 SF
435.6 21 M
( ) s
/Courier-Bold 7 7 SUF
439.8 21 M
(if) s
/F-gs-font 7 7 SF
448.2 21 M
( \( checker_type == 1 \)) s
402 13 M
(    {) s
402 5 M
(        printf\() s
/Courier-Bold 7 7 SUF
465 5 M
("you choose a not yet implemented checkerbord distribution.\\n") s
/F-gs-font 7 7 SF
725.4 5 M
(\);) s
_R
S
%%Page: (3) 3
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 3 def
/fname (BellBrandon_Midterm1.c) def
/fdir (.) def
/ftail (BellBrandon_Midterm1.c) def
% User defined strings:
/pagenumstr (3) def
/moddatestr (10/05/16) def
/modtimestr (14:40:17) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
column_lines
do_header
5 501 M
(        ) s
/Courier-Oblique 7 7 SUF
38.6 501 M
(// Call finalize before quiting, it's just good manners.) s
/F-gs-font 7 7 SF
5 493 M
(        MPI_Finalize\(\);) s
5 485 M
(        ) s
/Courier-Bold 7 7 SUF
38.6 485 M
(return) s
/F-gs-font 7 7 SF
63.8 485 M
( 1;) s
5 477 M
(    }) s
5 469 M
(    ) s
/Courier-Bold 7 7 SUF
21.8 469 M
(else) s
/F-gs-font 7 7 SF
38.6 469 M
( ) s
5 461 M
(    {) s
5 453 M
(        ) s
/Courier-Bold 7 7 SUF
38.6 453 M
(if) s
/F-gs-font 7 7 SF
47 453 M
( \( rank == 0 \)) s
5 445 M
(        {) s
5 437 M
(            printf\() s
/Courier-Bold 7 7 SUF
84.8 437 M
(" => [ERROR] More than 1 process started but no partion scheme specified.) s
5 429 M
(\\n") s
/F-gs-font 7 7 SF
17.6 429 M
(\);) s
5 421 M
(            printf\() s
/Courier-Bold 7 7 SUF
84.8 421 M
("   -> Pleas specify one of --checker-board or -b, --block\\n") s
/F-gs-font 7 7 SF
341 421 M
(\);) s
5 413 M
(        }) s
5 405 M
(        ) s
/Courier-Oblique 7 7 SUF
38.6 405 M
(// Call finalize before quiting, it's just good manners.) s
/F-gs-font 7 7 SF
5 397 M
(        MPI_Finalize\(\);) s
5 389 M
(        ) s
/Courier-Bold 7 7 SUF
38.6 389 M
(return) s
/F-gs-font 7 7 SF
63.8 389 M
( 1;) s
5 381 M
(    }) s
5 365 M
(    ) s
/Courier-Oblique 7 7 SUF
21.8 365 M
(// Read the world file using the wonderful provided function.) s
/F-gs-font 7 7 SF
5 357 M
(    ) s
/Courier-Oblique 7 7 SUF
21.8 357 M
(// populates field_a and _b with the data from that region of the file with) s
/F-gs-font 7 7 SF
5 349 M
(    ) s
/Courier-Oblique 7 7 SUF
21.8 349 M
(// size accomidations for the ghost rows/cols. I'll use them as field_a is) s
/F-gs-font 7 7 SF
5 341 M
(    ) s
/Courier-Oblique 7 7 SUF
21.8 341 M
(// the i array and field_b is the i+1 array initialy.) s
/F-gs-font 7 7 SF
5 333 M
(    readpgm\(filename\);) s
5 317 M
(    ) s
/Courier-Oblique 7 7 SUF
21.8 317 M
(// Get an initial Bug count.) s
/F-gs-font 7 7 SF
5 309 M
(    countBugs\( field_a, 0 \);) s
5 293 M
(    ) s
/Courier-Oblique 7 7 SUF
21.8 293 M
(///////////////////////////////////////////////////////////////////////////) s
/F-gs-font 7 7 SF
5 285 M
(    ) s
/Courier-Oblique 7 7 SUF
21.8 285 M
(// Play the game: serial version. ) s
/F-gs-font 7 7 SF
5 277 M
(    ) s
/Courier-Oblique 7 7 SUF
21.8 277 M
(///////////////////////////////////////////////////////////////////////////) s
/F-gs-font 7 7 SF
5 269 M
(    ) s
/Courier-Bold 7 7 SUF
21.8 269 M
(int) s
/F-gs-font 7 7 SF
34.4 269 M
( *swap;) s
5 261 M
(    ) s
/Courier-Bold 7 7 SUF
21.8 261 M
(int) s
/F-gs-font 7 7 SF
34.4 261 M
( l = field_width;) s
5 253 M
(    ) s
/Courier-Bold 7 7 SUF
21.8 253 M
(int) s
/F-gs-font 7 7 SF
34.4 253 M
( *cell;) s
5 245 M
(    ) s
/Courier-Bold 7 7 SUF
21.8 245 M
(int) s
/F-gs-font 7 7 SF
34.4 245 M
( *newcell;) s
5 237 M
(    ) s
/Courier-Bold 7 7 SUF
21.8 237 M
(for) s
/F-gs-font 7 7 SF
34.4 237 M
( \(j=0; j<iter_number; j++\)) s
5 229 M
(    {) s
5 221 M
(        ) s
/Courier-Bold 7 7 SUF
38.6 221 M
(for) s
/F-gs-font 7 7 SF
51.2 221 M
( \( i=\(field_width +1 \); i<\( field_width*field_height - field_width -1 \); i++ \)) s
5 213 M
(        {) s
5 205 M
(            cell = field_a + i;) s
5 197 M
(            newcell = field_b + i;) s
5 189 M
(            ) s
/Courier-Oblique 7 7 SUF
55.4 189 M
(// Calculate a cells neighbors by summing the stencil.) s
/F-gs-font 7 7 SF
5 181 M
(            neighbors = 0;) s
5 173 M
(            neighbors = *\(cell-1\)+ *\(cell+1\)+ *\(cell-l\)+ *\(cell-l-1\)+ *\(cell-l+1\)+ *\(cell+l\)) s
5 165 M
(+ *\(cell+l+1\)+ *\(cell+l-1\);) s
5 149 M
(            ) s
/Courier-Oblique 7 7 SUF
55.4 149 M
(// Apply Conway's Rules.) s
/F-gs-font 7 7 SF
5 141 M
(            ) s
/Courier-Bold 7 7 SUF
55.4 141 M
(if) s
/F-gs-font 7 7 SF
63.8 141 M
( \( *cell == 1 && neighbors <= 1 \)) s
5 133 M
(                *newcell = 0;) s
5 125 M
(            ) s
/Courier-Bold 7 7 SUF
55.4 125 M
(else) s
/F-gs-font 7 7 SF
72.2 125 M
( ) s
/Courier-Bold 7 7 SUF
76.4 125 M
(if) s
/F-gs-font 7 7 SF
84.8 125 M
( \( *cell == 1 && neighbors >= 4 \)) s
5 117 M
(                *newcell = 0;) s
5 109 M
(            ) s
/Courier-Bold 7 7 SUF
55.4 109 M
(else) s
/F-gs-font 7 7 SF
72.2 109 M
( ) s
/Courier-Bold 7 7 SUF
76.4 109 M
(if) s
/F-gs-font 7 7 SF
84.8 109 M
( \( \(*cell == 1 && neighbors == 2\) || neighbors == 3 \)) s
5 101 M
(                *newcell = 1;) s
5 93 M
(            ) s
/Courier-Bold 7 7 SUF
55.4 93 M
(else) s
/F-gs-font 7 7 SF
72.2 93 M
( ) s
/Courier-Bold 7 7 SUF
76.4 93 M
(if) s
/F-gs-font 7 7 SF
84.8 93 M
( \( *cell == 0 && neighbors == 3 \)) s
5 85 M
(                *newcell = 1;) s
5 77 M
(            swap = field_b;) s
5 69 M
(            field_b = field_a;) s
5 61 M
(            field_a = swap;) s
5 53 M
(        }) s
5 37 M
(        ) s
/Courier-Oblique 7 7 SUF
38.6 37 M
(//printf\("iter j %d\\n", j\);) s
/F-gs-font 7 7 SF
5 29 M
(        ) s
/Courier-Oblique 7 7 SUF
38.6 29 M
(// Bug count output.) s
/F-gs-font 7 7 SF
5 21 M
(        ) s
/Courier-Bold 7 7 SUF
38.6 21 M
(if) s
/F-gs-font 7 7 SF
47 21 M
( \( count_alive !=0 \)) s
5 13 M
(        {) s
5 5 M
(            ) s
/Courier-Bold 7 7 SUF
55.4 5 M
(if) s
/F-gs-font 7 7 SF
63.8 5 M
( \( \(j+1\) % count_alive == 0 \)) s
402 501 M
(                ) s
/Courier-Oblique 7 7 SUF
469.2 501 M
(// swap holds what ever the last i+1 ptr was, so the last) s
/F-gs-font 7 7 SF
402 493 M
(                ) s
/Courier-Oblique 7 7 SUF
469.2 493 M
(// iteration.) s
/F-gs-font 7 7 SF
402 485 M
(                countBugs\( swap, j \);) s
402 477 M
(        }) s
402 469 M
(    }) s
402 453 M
(    ) s
/Courier-Oblique 7 7 SUF
418.8 453 M
(///////////////////////////////////////////////////////////////////////////) s
/F-gs-font 7 7 SF
402 445 M
(    ) s
/Courier-Oblique 7 7 SUF
418.8 445 M
(// Final clean-up and shutdown. ) s
/F-gs-font 7 7 SF
402 437 M
(    ) s
/Courier-Oblique 7 7 SUF
418.8 437 M
(///////////////////////////////////////////////////////////////////////////) s
/F-gs-font 7 7 SF
402 421 M
(    ) s
/Courier-Oblique 7 7 SUF
418.8 421 M
(// Free the popt context memory.) s
/F-gs-font 7 7 SF
402 413 M
(    poptFreeContext\(context\);) s
402 405 M
(    ) s
/Courier-Oblique 7 7 SUF
418.8 405 M
(// Shutdown MPI.) s
/F-gs-font 7 7 SF
402 397 M
(    MPI_Finalize\(\);) s
402 381 M
(    ) s
/Courier-Bold 7 7 SUF
418.8 381 M
(return) s
/F-gs-font 7 7 SF
444 381 M
( 0;) s
402 373 M
(}) s
_R
S
%%Page: (1) 4
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (pgm.c) def
/fdir (.) def
/ftail (pgm.c) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (10/05/16) def
/modtimestr (09:47:48) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
column_lines
do_header
/Courier-Oblique 7 7 SUF
5 501 M
(// System includes) s
/F-gs-font 7 7 SF
5 493 M
(#) s
/Courier-Bold 7 7 SUF
9.2 493 M
(include) s
/F-gs-font 7 7 SF
38.6 493 M
( ) s
/Courier-Bold 7 7 SUF
42.8 493 M
(<stdlib.h>) s
/F-gs-font 7 7 SF
5 485 M
(#) s
/Courier-Bold 7 7 SUF
9.2 485 M
(include) s
/F-gs-font 7 7 SF
38.6 485 M
( ) s
/Courier-Bold 7 7 SUF
42.8 485 M
(<stdio.h>) s
/F-gs-font 7 7 SF
5 477 M
(#) s
/Courier-Bold 7 7 SUF
9.2 477 M
(include) s
/F-gs-font 7 7 SF
38.6 477 M
( ) s
/Courier-Bold 7 7 SUF
42.8 477 M
(<string.h>) s
/F-gs-font 7 7 SF
5 469 M
(#) s
/Courier-Bold 7 7 SUF
9.2 469 M
(include) s
/F-gs-font 7 7 SF
38.6 469 M
( ) s
/Courier-Bold 7 7 SUF
42.8 469 M
("mpi.h") s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 453 M
(// User includes) s
/F-gs-font 7 7 SF
5 445 M
(#) s
/Courier-Bold 7 7 SUF
9.2 445 M
(include) s
/F-gs-font 7 7 SF
38.6 445 M
( ) s
/Courier-Bold 7 7 SUF
42.8 445 M
("globals.h") s
/F-gs-font 7 7 SF
5 437 M
(#) s
/Courier-Bold 7 7 SUF
9.2 437 M
(include) s
/F-gs-font 7 7 SF
38.6 437 M
( ) s
/Courier-Bold 7 7 SUF
42.8 437 M
("pprintf.h") s
/F-gs-font 7 7 SF
/Courier-Bold 7 7 SUF
5 421 M
(typedef) s
/F-gs-font 7 7 SF
34.4 421 M
( ) s
/Courier-Bold 7 7 SUF
38.6 421 M
(enum) s
/F-gs-font 7 7 SF
55.4 421 M
( { false, true } bool; ) s
/Courier-Oblique 7 7 SUF
152 421 M
(// Provide C++ style 'bool' type in C) s
/F-gs-font 7 7 SF
5 405 M
(bool ) s
/Courier-Bold 7 7 SUF
26 405 M
(readpgm) s
/F-gs-font 7 7 SF
55.4 405 M
(\( ) s
/Courier-Bold 7 7 SUF
63.8 405 M
(char) s
/F-gs-font 7 7 SF
80.6 405 M
( *filename \)) s
5 397 M
({) s
5 389 M
(  ) s
/Courier-Oblique 7 7 SUF
13.4 389 M
(// Read a PGM file into the local task) s
/F-gs-font 7 7 SF
5 381 M
(  ) s
/Courier-Oblique 7 7 SUF
13.4 381 M
(//) s
/F-gs-font 7 7 SF
5 373 M
(  ) s
/Courier-Oblique 7 7 SUF
13.4 373 M
(// Input: char *filename, name of file to read) s
/F-gs-font 7 7 SF
5 365 M
(  ) s
/Courier-Oblique 7 7 SUF
13.4 365 M
(// Returns: True if file read successfully, False otherwise) s
/F-gs-font 7 7 SF
5 357 M
(  ) s
/Courier-Oblique 7 7 SUF
13.4 357 M
(//) s
/F-gs-font 7 7 SF
5 349 M
(  ) s
/Courier-Oblique 7 7 SUF
13.4 349 M
(// Preconditions:) s
/F-gs-font 7 7 SF
5 341 M
(  ) s
/Courier-Oblique 7 7 SUF
13.4 341 M
(//  * global variables nrows, ncols, my_row, my_col must be set) s
/F-gs-font 7 7 SF
5 333 M
(  ) s
/Courier-Oblique 7 7 SUF
13.4 333 M
(//) s
/F-gs-font 7 7 SF
5 325 M
(  ) s
/Courier-Oblique 7 7 SUF
13.4 325 M
(// Side effects:) s
/F-gs-font 7 7 SF
5 317 M
(  ) s
/Courier-Oblique 7 7 SUF
13.4 317 M
(//  * sets global variables local_width, local_height to local game size) s
/F-gs-font 7 7 SF
5 309 M
(  ) s
/Courier-Oblique 7 7 SUF
13.4 309 M
(//  * sets global variables field_width, field_height to local field size) s
/F-gs-font 7 7 SF
5 301 M
(  ) s
/Courier-Oblique 7 7 SUF
13.4 301 M
(//  * allocates global variables field_a and field_b) s
/F-gs-font 7 7 SF
5 285 M
(  pp_set_banner\( ) s
/Courier-Bold 7 7 SUF
76.4 285 M
("pgm:readpgm") s
/F-gs-font 7 7 SF
131 285 M
( \);) s
5 269 M
(  ) s
/Courier-Oblique 7 7 SUF
13.4 269 M
(// Open the file) s
/F-gs-font 7 7 SF
5 261 M
(  ) s
/Courier-Bold 7 7 SUF
13.4 261 M
(if) s
/F-gs-font 7 7 SF
21.8 261 M
(\( rank==0 \)) s
5 253 M
(    pprintf\( ) s
/Courier-Bold 7 7 SUF
59.6 253 M
("Opening file %s\\n") s
/F-gs-font 7 7 SF
139.4 253 M
(, filename \);) s
5 245 M
(  FILE *fp = fopen\( filename, ) s
/Courier-Bold 7 7 SUF
131 245 M
("r") s
/F-gs-font 7 7 SF
143.6 245 M
( \);) s
5 237 M
(  ) s
/Courier-Bold 7 7 SUF
13.4 237 M
(if) s
/F-gs-font 7 7 SF
21.8 237 M
(\( !fp \)) s
5 229 M
(  {) s
5 221 M
(    pprintf\( ) s
/Courier-Bold 7 7 SUF
59.6 221 M
("Error: The file '%s' could not be opened.\\n") s
/F-gs-font 7 7 SF
248.6 221 M
(, filename \);) s
5 213 M
(    ) s
/Courier-Bold 7 7 SUF
21.8 213 M
(return) s
/F-gs-font 7 7 SF
47 213 M
( false;) s
5 205 M
(  }) s
5 189 M
(  ) s
/Courier-Oblique 7 7 SUF
13.4 189 M
(// Read the PGM header, which looks like this:) s
/F-gs-font 7 7 SF
5 181 M
(  ) s
/Courier-Oblique 7 7 SUF
13.4 181 M
(//  |P5        magic version number) s
/F-gs-font 7 7 SF
5 173 M
(  ) s
/Courier-Oblique 7 7 SUF
13.4 173 M
(//  |900 900       width height) s
/F-gs-font 7 7 SF
5 165 M
(  ) s
/Courier-Oblique 7 7 SUF
13.4 165 M
(//  |255         depth) s
/F-gs-font 7 7 SF
5 157 M
(  ) s
/Courier-Bold 7 7 SUF
13.4 157 M
(char) s
/F-gs-font 7 7 SF
30.2 157 M
( header[10];) s
5 149 M
(  ) s
/Courier-Bold 7 7 SUF
13.4 149 M
(int) s
/F-gs-font 7 7 SF
26 149 M
( width, height, depth;) s
5 141 M
(  ) s
/Courier-Bold 7 7 SUF
13.4 141 M
(int) s
/F-gs-font 7 7 SF
26 141 M
( rv = fscanf\( fp, ) s
/Courier-Bold 7 7 SUF
101.6 141 M
("%6s\\n%i %i\\n%i\\n") s
/F-gs-font 7 7 SF
177.2 141 M
(, header, &width, &height, &depth \);) s
5 133 M
(  ) s
/Courier-Bold 7 7 SUF
13.4 133 M
(if) s
/F-gs-font 7 7 SF
21.8 133 M
(\( rv != 4 \)) s
5 125 M
(  {) s
5 117 M
(    ) s
/Courier-Bold 7 7 SUF
21.8 117 M
(if) s
/F-gs-font 7 7 SF
30.2 117 M
(\(rank==0\) ) s
5 109 M
(      pprintf\( ) s
/Courier-Bold 7 7 SUF
68 109 M
("Error: The file '%s' did not have a valid PGM header\\n") s
/F-gs-font 7 7 SF
303.2 109 M
(, ) s
5 101 M
(        filename \);) s
5 93 M
(    ) s
/Courier-Bold 7 7 SUF
21.8 93 M
(return) s
/F-gs-font 7 7 SF
47 93 M
( false;) s
5 85 M
(  }) s
5 77 M
(  ) s
/Courier-Bold 7 7 SUF
13.4 77 M
(if) s
/F-gs-font 7 7 SF
21.8 77 M
(\( rank==0 \)) s
5 69 M
(    pprintf\( ) s
/Courier-Bold 7 7 SUF
59.6 69 M
("%s: %s %i %i %i\\n") s
/F-gs-font 7 7 SF
139.4 69 M
(, filename, header, width, height, depth \);) s
5 53 M
(  ) s
/Courier-Oblique 7 7 SUF
13.4 53 M
(// Make sure the header is valid) s
/F-gs-font 7 7 SF
5 45 M
(  ) s
/Courier-Bold 7 7 SUF
13.4 45 M
(if) s
/F-gs-font 7 7 SF
21.8 45 M
(\( strcmp\( header, ) s
/Courier-Bold 7 7 SUF
97.4 45 M
("P5") s
/F-gs-font 7 7 SF
114.2 45 M
(\) \)) s
5 37 M
(  {) s
5 29 M
(    ) s
/Courier-Bold 7 7 SUF
21.8 29 M
(if) s
/F-gs-font 7 7 SF
30.2 29 M
(\(rank==0\) ) s
5 21 M
(      pprintf\( ) s
/Courier-Bold 7 7 SUF
68 21 M
("Error: PGM file is not a valid P5 pixmap.\\n") s
/F-gs-font 7 7 SF
257 21 M
( \);) s
5 13 M
(    ) s
/Courier-Bold 7 7 SUF
21.8 13 M
(return) s
/F-gs-font 7 7 SF
47 13 M
( false;) s
5 5 M
(  }) s
402 501 M
(  ) s
/Courier-Bold 7 7 SUF
410.4 501 M
(if) s
/F-gs-font 7 7 SF
418.8 501 M
(\( depth != 255 \)) s
402 493 M
(  {) s
402 485 M
(    ) s
/Courier-Bold 7 7 SUF
418.8 485 M
(if) s
/F-gs-font 7 7 SF
427.2 485 M
(\(rank==0\) ) s
402 477 M
(      pprintf\( ) s
/Courier-Bold 7 7 SUF
465 477 M
("Error: PGM file has depth=%i, require depth=255 \\n") s
/F-gs-font 7 7 SF
683.4 477 M
(, ) s
402 469 M
(        depth \);) s
402 461 M
(    ) s
/Courier-Bold 7 7 SUF
418.8 461 M
(return) s
/F-gs-font 7 7 SF
444 461 M
( false;) s
402 453 M
(  }) s
402 437 M
(  ) s
/Courier-Oblique 7 7 SUF
410.4 437 M
(// Make sure that the width and height are divisible by the number of) s
/F-gs-font 7 7 SF
402 429 M
(  ) s
/Courier-Oblique 7 7 SUF
410.4 429 M
(// processors in x and y directions) s
/F-gs-font 7 7 SF
402 413 M
(  ) s
/Courier-Bold 7 7 SUF
410.4 413 M
(if) s
/F-gs-font 7 7 SF
418.8 413 M
(\( width % ncols \)) s
402 405 M
(  {) s
402 397 M
(    ) s
/Courier-Bold 7 7 SUF
418.8 397 M
(if) s
/F-gs-font 7 7 SF
427.2 397 M
(\( rank==0 \)) s
402 389 M
(      pprintf\( ) s
/Courier-Bold 7 7 SUF
465 389 M
("Error: %i pixel width cannot be divided into %i cols\\n") s
/F-gs-font 7 7 SF
700.2 389 M
(, ) s
402 381 M
(          width, ncols \);) s
402 373 M
(    ) s
/Courier-Bold 7 7 SUF
418.8 373 M
(return) s
/F-gs-font 7 7 SF
444 373 M
( false;) s
402 365 M
(  }) s
402 357 M
(  ) s
/Courier-Bold 7 7 SUF
410.4 357 M
(if) s
/F-gs-font 7 7 SF
418.8 357 M
(\( height % nrows \)) s
402 349 M
(  {) s
402 341 M
(    ) s
/Courier-Bold 7 7 SUF
418.8 341 M
(if) s
/F-gs-font 7 7 SF
427.2 341 M
(\( rank==0 \)) s
402 333 M
(      pprintf\( ) s
/Courier-Bold 7 7 SUF
465 333 M
("Error: %i pixel height cannot be divided into %i rows\\n") s
/F-gs-font 7 7 SF
704.4 333 M
(,) s
402 325 M
(          height, nrows \);) s
402 317 M
(    ) s
/Courier-Bold 7 7 SUF
418.8 317 M
(return) s
/F-gs-font 7 7 SF
444 317 M
( false;) s
402 309 M
(  }) s
402 293 M
(  ) s
/Courier-Oblique 7 7 SUF
410.4 293 M
(// Divide the total image among the local processors) s
/F-gs-font 7 7 SF
402 285 M
(  local_width = width / ncols;) s
402 277 M
(  local_height = height / nrows;) s
402 261 M
(  ) s
/Courier-Oblique 7 7 SUF
410.4 261 M
(// Find out where my starting range it) s
/F-gs-font 7 7 SF
402 253 M
(  ) s
/Courier-Bold 7 7 SUF
410.4 253 M
(int) s
/F-gs-font 7 7 SF
423 253 M
( start_x = local_width * my_col;) s
402 245 M
(  ) s
/Courier-Bold 7 7 SUF
410.4 245 M
(int) s
/F-gs-font 7 7 SF
423 245 M
( start_y = local_height * my_row;) s
402 229 M
(  pprintf\( ) s
/Courier-Bold 7 7 SUF
448.2 229 M
("Hosting data for x:%03i-%03i y:%03i-%03i\\n") s
/F-gs-font 7 7 SF
633 229 M
(, ) s
402 221 M
(      start_x, start_x + local_width,) s
402 213 M
(      start_y, start_y + local_height \);) s
402 197 M
(  ) s
/Courier-Oblique 7 7 SUF
410.4 197 M
(// Create the array!) s
/F-gs-font 7 7 SF
402 189 M
(  field_width = local_width + 2;) s
402 181 M
(  field_height = local_height + 2;) s
402 173 M
(  field_a = \() s
/Courier-Bold 7 7 SUF
456.6 173 M
(int) s
/F-gs-font 7 7 SF
469.2 173 M
( *\)malloc\( field_width * field_height * ) s
/Courier-Bold 7 7 SUF
637.2 173 M
(sizeof) s
/F-gs-font 7 7 SF
662.4 173 M
(\() s
/Courier-Bold 7 7 SUF
666.6 173 M
(int) s
/F-gs-font 7 7 SF
679.2 173 M
(\)\);) s
402 165 M
(  field_b = \() s
/Courier-Bold 7 7 SUF
456.6 165 M
(int) s
/F-gs-font 7 7 SF
469.2 165 M
( *\)malloc\( field_width * field_height * ) s
/Courier-Bold 7 7 SUF
637.2 165 M
(sizeof) s
/F-gs-font 7 7 SF
662.4 165 M
(\() s
/Courier-Bold 7 7 SUF
666.6 165 M
(int) s
/F-gs-font 7 7 SF
679.2 165 M
(\)\);) s
402 149 M
(  ) s
/Courier-Oblique 7 7 SUF
410.4 149 M
(// Read the data from the file. Save the local data to the local array.) s
/F-gs-font 7 7 SF
402 141 M
(  ) s
/Courier-Bold 7 7 SUF
410.4 141 M
(int) s
/F-gs-font 7 7 SF
423 141 M
( b, ll, lx, ly;) s
402 133 M
(  ) s
/Courier-Bold 7 7 SUF
410.4 133 M
(for) s
/F-gs-font 7 7 SF
423 133 M
(\( ) s
/Courier-Bold 7 7 SUF
431.4 133 M
(int) s
/F-gs-font 7 7 SF
444 133 M
( y=0; y<height; y++ \)) s
402 125 M
(  {) s
402 117 M
(    ) s
/Courier-Bold 7 7 SUF
418.8 117 M
(for) s
/F-gs-font 7 7 SF
431.4 117 M
(\( ) s
/Courier-Bold 7 7 SUF
439.8 117 M
(int) s
/F-gs-font 7 7 SF
452.4 117 M
( x=0; x<width; x++ \)) s
402 109 M
(    {) s
402 101 M
(      ) s
/Courier-Oblique 7 7 SUF
427.2 101 M
(// Read the next character) s
/F-gs-font 7 7 SF
402 93 M
(      b = fgetc\( fp \);) s
402 85 M
(      ) s
/Courier-Bold 7 7 SUF
427.2 85 M
(if) s
/F-gs-font 7 7 SF
435.6 85 M
(\( b == EOF \)) s
402 77 M
(      {) s
402 69 M
(        pprintf\( ) s
/Courier-Bold 7 7 SUF
473.4 69 M
("Error: Encountered EOF at [%i,%i]\\n") s
/F-gs-font 7 7 SF
628.8 69 M
(, y,x \);) s
402 61 M
(        ) s
/Courier-Bold 7 7 SUF
435.6 61 M
(return) s
/F-gs-font 7 7 SF
460.8 61 M
( false;) s
402 53 M
(      }) s
402 37 M
(      ) s
/Courier-Oblique 7 7 SUF
427.2 37 M
(// From the PGM, black cells \(b=0\) are bugs, all other ) s
/F-gs-font 7 7 SF
402 29 M
(      ) s
/Courier-Oblique 7 7 SUF
427.2 29 M
(// cells are background ) s
/F-gs-font 7 7 SF
402 21 M
(      ) s
/Courier-Bold 7 7 SUF
427.2 21 M
(if) s
/F-gs-font 7 7 SF
435.6 21 M
(\( b==0 \)) s
402 13 M
(      {) s
402 5 M
(        b=1;) s
_R
S
%%Page: (2) 5
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 2 def
/fname (pgm.c) def
/fdir (.) def
/ftail (pgm.c) def
% User defined strings:
/pagenumstr (2) def
/moddatestr (10/05/16) def
/modtimestr (09:47:48) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
column_lines
do_header
5 501 M
(      }) s
5 493 M
(      ) s
/Courier-Bold 7 7 SUF
30.2 493 M
(else) s
/F-gs-font 7 7 SF
5 485 M
(      {) s
5 477 M
(        b=0;) s
5 469 M
(      }) s
5 461 M
(        ) s
5 445 M
(      ) s
/Courier-Oblique 7 7 SUF
30.2 445 M
(// If the character is local, then save it!) s
/F-gs-font 7 7 SF
5 437 M
(      ) s
/Courier-Bold 7 7 SUF
30.2 437 M
(if) s
/F-gs-font 7 7 SF
38.6 437 M
(\( x >= start_x && x < start_x + local_width &&) s
5 429 M
(        y >= start_y && y < start_y + local_height \)) s
5 421 M
(      {) s
5 413 M
(        ) s
/Courier-Oblique 7 7 SUF
38.6 413 M
(// Calculate the local pixels \(+1 for ghost row,col\)) s
/F-gs-font 7 7 SF
5 405 M
(        lx = x - start_x + 1;) s
5 397 M
(        ly = y - start_y + 1;) s
5 389 M
(        ll = \(ly * field_width + lx \);) s
5 381 M
(        field_a[ ll ] = b;) s
5 373 M
(        field_b[ ll ] = b;) s
5 365 M
(      } ) s
/Courier-Oblique 7 7 SUF
38.6 365 M
(// save local point) s
/F-gs-font 7 7 SF
5 349 M
(    } ) s
/Courier-Oblique 7 7 SUF
30.2 349 M
(// for x) s
/F-gs-font 7 7 SF
5 341 M
(  } ) s
/Courier-Oblique 7 7 SUF
21.8 341 M
(// for y) s
/F-gs-font 7 7 SF
5 325 M
(  fclose\( fp \);) s
5 309 M
(  pp_reset_banner\(\);) s
5 301 M
(  ) s
/Courier-Bold 7 7 SUF
13.4 301 M
(return) s
/F-gs-font 7 7 SF
38.6 301 M
( true;) s
5 293 M
(}) s
_R
S
%%Page: (1) 6
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (pprintf.c) def
/fdir (.) def
/ftail (pprintf.c) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (10/05/16) def
/modtimestr (09:47:48) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
column_lines
do_header
/Courier-Oblique 7 7 SUF
5 501 M
(/* $Id: pprintf.c,v 1.5 2006/02/09 20:42:25 mccreary Exp $ */) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 485 M
(/*) s
5 477 M
( * Copyright \(c\) 2006 Sean McCreary <mccreary@mcwest.org>. All rights) s
5 469 M
( * reserved.) s
5 461 M
( *) s
5 453 M
( * Redistribution and use in source and binary forms, with or without) s
5 445 M
( * modification, are permitted provided that the following conditions) s
5 437 M
( * are met:) s
5 429 M
( *) s
5 421 M
( * 1. Redistributions of source code must retain the above copyright) s
5 413 M
( * notice, this list of conditions and the following disclaimer.) s
5 405 M
( *) s
5 397 M
( * 2. Redistributions in binary form must reproduce the above copyright) s
5 389 M
( * notice, this list of conditions and the following disclaimer in the) s
5 381 M
( * documentation and/or other materials provided with the distribution.) s
5 373 M
( *) s
5 365 M
( * 3. The name of the author may not be used to endorse or promote products) s
5 357 M
( * derived from this software without specific prior written permission) s
5 349 M
( *) s
5 341 M
( * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,) s
5 333 M
( * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY) s
5 325 M
( * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL) s
5 317 M
( * THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,) s
5 309 M
( * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \(INCLUDING, BUT NOT LIMITED TO,) s
5 301 M
( * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR) s
5 293 M
( * PROFITS; OR BUSINESS INTERRUPTION\) HOWEVER CAUSED AND ON ANY THEORY OF) s
5 285 M
( * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT \(INCLUDING) s
5 277 M
( * NEGLIGENCE OR OTHERWISE\) ARISING IN ANY WAY OUT OF THE USE OF THIS) s
5 269 M
( * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.) s
5 261 M
( */) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 245 M
(/* Pretty printf\(\) wrapper for MPI processes */) s
/F-gs-font 7 7 SF
5 229 M
(#) s
/Courier-Bold 7 7 SUF
9.2 229 M
(include) s
/F-gs-font 7 7 SF
38.6 229 M
( ) s
/Courier-Bold 7 7 SUF
42.8 229 M
(<stdio.h>) s
/F-gs-font 7 7 SF
5 221 M
(#) s
/Courier-Bold 7 7 SUF
9.2 221 M
(include) s
/F-gs-font 7 7 SF
38.6 221 M
( ) s
/Courier-Bold 7 7 SUF
42.8 221 M
(<stdarg.h>) s
/F-gs-font 7 7 SF
5 213 M
(#) s
/Courier-Bold 7 7 SUF
9.2 213 M
(include) s
/F-gs-font 7 7 SF
38.6 213 M
( ) s
/Courier-Bold 7 7 SUF
42.8 213 M
(<string.h>) s
/F-gs-font 7 7 SF
5 197 M
(#) s
/Courier-Bold 7 7 SUF
9.2 197 M
(define) s
/F-gs-font 7 7 SF
34.4 197 M
( ) s
/Courier-Bold 7 7 SUF
38.6 197 M
(PP_MAX_BANNER_LEN) s
/F-gs-font 7 7 SF
110 197 M
(       14) s
5 189 M
(#) s
/Courier-Bold 7 7 SUF
9.2 189 M
(define) s
/F-gs-font 7 7 SF
34.4 189 M
( ) s
/Courier-Bold 7 7 SUF
38.6 189 M
(PP_MAX_LINE_LEN) s
/F-gs-font 7 7 SF
101.6 189 M
(         81) s
5 181 M
(#) s
/Courier-Bold 7 7 SUF
9.2 181 M
(define) s
/F-gs-font 7 7 SF
34.4 181 M
( ) s
/Courier-Bold 7 7 SUF
38.6 181 M
(PP_PREFIX_LEN) s
/F-gs-font 7 7 SF
93.2 181 M
(           27) s
5 173 M
(#) s
/Courier-Bold 7 7 SUF
9.2 173 M
(define) s
/F-gs-font 7 7 SF
34.4 173 M
( ) s
/Courier-Bold 7 7 SUF
38.6 173 M
(PP_FORMAT) s
/F-gs-font 7 7 SF
76.4 173 M
(               ) s
/Courier-Bold 7 7 SUF
139.4 173 M
("[%3d:%03d] %-14s : ") s
/F-gs-font 7 7 SF
/Courier-Bold 7 7 SUF
5 157 M
(static) s
/F-gs-font 7 7 SF
30.2 157 M
( ) s
/Courier-Bold 7 7 SUF
34.4 157 M
(int) s
/F-gs-font 7 7 SF
47 157 M
( pid = -1;) s
/Courier-Bold 7 7 SUF
5 149 M
(static) s
/F-gs-font 7 7 SF
30.2 149 M
( ) s
/Courier-Bold 7 7 SUF
34.4 149 M
(int) s
/F-gs-font 7 7 SF
47 149 M
( msgcount = 0;) s
/Courier-Bold 7 7 SUF
5 141 M
(static) s
/F-gs-font 7 7 SF
30.2 141 M
( ) s
/Courier-Bold 7 7 SUF
34.4 141 M
(char) s
/F-gs-font 7 7 SF
51.2 141 M
( banner[PP_MAX_BANNER_LEN] = ) s
/Courier-Bold 7 7 SUF
173 141 M
("") s
/F-gs-font 7 7 SF
181.4 141 M
(;) s
/Courier-Bold 7 7 SUF
5 133 M
(static) s
/F-gs-font 7 7 SF
30.2 133 M
( ) s
/Courier-Bold 7 7 SUF
34.4 133 M
(char) s
/F-gs-font 7 7 SF
51.2 133 M
( oldbanner[PP_MAX_BANNER_LEN] = ) s
/Courier-Bold 7 7 SUF
185.6 133 M
("") s
/F-gs-font 7 7 SF
194 133 M
(;) s
/Courier-Bold 7 7 SUF
5 117 M
(int) s
/F-gs-font 7 7 SF
17.6 117 M
( ) s
/Courier-Bold 7 7 SUF
21.8 117 M
(init_pprintf) s
/F-gs-font 7 7 SF
72.2 117 M
(\() s
/Courier-Bold 7 7 SUF
76.4 117 M
(int) s
/F-gs-font 7 7 SF
89 117 M
(\);) s
/Courier-Bold 7 7 SUF
5 109 M
(int) s
/F-gs-font 7 7 SF
17.6 109 M
( ) s
/Courier-Bold 7 7 SUF
21.8 109 M
(pp_set_banner) s
/F-gs-font 7 7 SF
76.4 109 M
(\() s
/Courier-Bold 7 7 SUF
80.6 109 M
(char) s
/F-gs-font 7 7 SF
97.4 109 M
( *\);) s
/Courier-Bold 7 7 SUF
5 101 M
(int) s
/F-gs-font 7 7 SF
17.6 101 M
( ) s
/Courier-Bold 7 7 SUF
21.8 101 M
(pp_reset_banner) s
/F-gs-font 7 7 SF
84.8 101 M
(\(\);) s
/Courier-Bold 7 7 SUF
5 93 M
(int) s
/F-gs-font 7 7 SF
17.6 93 M
( ) s
/Courier-Bold 7 7 SUF
21.8 93 M
(pprintf) s
/F-gs-font 7 7 SF
51.2 93 M
(\() s
/Courier-Bold 7 7 SUF
55.4 93 M
(char) s
/F-gs-font 7 7 SF
72.2 93 M
( *, ...\);) s
/Courier-Bold 7 7 SUF
5 77 M
(int) s
/F-gs-font 7 7 SF
17.6 77 M
( ) s
/Courier-Bold 7 7 SUF
21.8 77 M
(init_pprintf) s
/F-gs-font 7 7 SF
72.2 77 M
(\( ) s
/Courier-Bold 7 7 SUF
80.6 77 M
(int) s
/F-gs-font 7 7 SF
93.2 77 M
( my_rank \)) s
5 69 M
({) s
5 61 M
(    pp_set_banner\() s
/Courier-Bold 7 7 SUF
80.6 61 M
("init_pprintf") s
/F-gs-font 7 7 SF
139.4 61 M
(\);) s
5 53 M
(    pid = my_rank;) s
/Courier-Oblique 7 7 SUF
5 45 M
(/*) s
5 37 M
(    pprintf\("PID is %d\\n", pid\);) s
5 29 M
(*/) s
/F-gs-font 7 7 SF
5 21 M
(    ) s
/Courier-Bold 7 7 SUF
21.8 21 M
(return) s
/F-gs-font 7 7 SF
47 21 M
( 0;) s
5 13 M
(}) s
/Courier-Bold 7 7 SUF
402 501 M
(int) s
/F-gs-font 7 7 SF
414.6 501 M
( ) s
/Courier-Bold 7 7 SUF
418.8 501 M
(pp_set_banner) s
/F-gs-font 7 7 SF
473.4 501 M
(\( ) s
/Courier-Bold 7 7 SUF
481.8 501 M
(char) s
/F-gs-font 7 7 SF
498.6 501 M
( *newbanner \)) s
402 493 M
({) s
402 485 M
(    strncpy\(oldbanner, banner, PP_MAX_BANNER_LEN\);) s
402 477 M
(    strncpy\(banner, newbanner, PP_MAX_BANNER_LEN\);) s
402 469 M
(    ) s
/Courier-Bold 7 7 SUF
418.8 469 M
(return) s
/F-gs-font 7 7 SF
444 469 M
( 0;) s
402 461 M
(}) s
/Courier-Bold 7 7 SUF
402 445 M
(int) s
/F-gs-font 7 7 SF
414.6 445 M
( ) s
/Courier-Bold 7 7 SUF
418.8 445 M
(pp_reset_banner) s
/F-gs-font 7 7 SF
481.8 445 M
(\(\)) s
402 437 M
({) s
402 429 M
(    strncpy\(banner, oldbanner, PP_MAX_BANNER_LEN\);) s
402 421 M
(    ) s
/Courier-Bold 7 7 SUF
418.8 421 M
(return) s
/F-gs-font 7 7 SF
444 421 M
( 0;) s
402 413 M
(}) s
/Courier-Bold 7 7 SUF
402 397 M
(int) s
/F-gs-font 7 7 SF
414.6 397 M
( ) s
/Courier-Bold 7 7 SUF
418.8 397 M
(pprintf) s
/F-gs-font 7 7 SF
448.2 397 M
(\( ) s
/Courier-Bold 7 7 SUF
456.6 397 M
(char) s
/F-gs-font 7 7 SF
473.4 397 M
( *format, ... \)) s
402 389 M
({) s
402 381 M
(    va_list ap;) s
402 373 M
(    ) s
/Courier-Bold 7 7 SUF
418.8 373 M
(char) s
/F-gs-font 7 7 SF
435.6 373 M
( output_line[PP_MAX_LINE_LEN];) s
402 357 M
(    ) s
/Courier-Oblique 7 7 SUF
418.8 357 M
(/* Construct prefix */) s
/F-gs-font 7 7 SF
402 349 M
(    snprintf\(output_line, PP_PREFIX_LEN+1, PP_FORMAT, pid, msgcount, banner\); ) s
402 333 M
(    va_start\(ap, format\);) s
402 325 M
(    vsnprintf\(output_line + PP_PREFIX_LEN,) s
402 317 M
(                PP_MAX_LINE_LEN - PP_PREFIX_LEN, format, ap\);) s
402 309 M
(    va_end\(ap\);) s
402 293 M
(    printf\() s
/Courier-Bold 7 7 SUF
448.2 293 M
("%s") s
/F-gs-font 7 7 SF
465 293 M
(, output_line\);) s
402 285 M
(    fflush\(stdout\);) s
402 277 M
(    msgcount++;) s
402 269 M
(    ) s
/Courier-Bold 7 7 SUF
418.8 269 M
(return) s
/F-gs-font 7 7 SF
444 269 M
( 0;) s
402 261 M
(}) s
_R
S
%%Page: (1) 7
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (globals.h) def
/fdir (.) def
/ftail (globals.h) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (10/05/16) def
/modtimestr (13:54:56) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
column_lines
do_header
/Courier-Oblique 7 7 SUF
5 501 M
(// Conway's Game of Life) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 493 M
(// Global variable include file) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 485 M
(//) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 477 M
(// CSCI 4576/5576 High Performance Scientific Computing) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 469 M
(// Matthew Woitaszek) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 453 M
(// <soapbox>) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 445 M
(// This file contains global variables: variables that are defined throughout) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 437 M
(// the entire program, even between multiple independent source files. Of) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 429 M
(// course, global variables are generally bad, but they're useful here because) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 421 M
(// it allows all of the source files to know their rank and the number of MPI) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 413 M
(// tasks. But don't use it lightly.) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 405 M
(//) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 397 M
(// How it works:) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 389 M
(//  * One .cpp file -- usually the one that contains main\(\), includes this file) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 381 M
(//    within #define __MAIN, like this:) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 373 M
(//      #define __MAIN) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 365 M
(//      #include globals.h) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 357 M
(//      #undef __MAIN) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 349 M
(//  * The other files just "#include globals.h"  ) s
/F-gs-font 7 7 SF
5 333 M
(#) s
/Courier-Bold 7 7 SUF
9.2 333 M
(ifdef) s
/F-gs-font 7 7 SF
30.2 333 M
( ) s
/Courier-Bold 7 7 SUF
34.4 333 M
(__MAIN) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 325 M
(// MPI procesess and node variables.) s
/F-gs-font 7 7 SF
/Courier-Bold 7 7 SUF
5 317 M
(int) s
/F-gs-font 7 7 SF
17.6 317 M
( rank;) s
/Courier-Bold 7 7 SUF
5 309 M
(int) s
/F-gs-font 7 7 SF
17.6 309 M
( np;) s
/Courier-Bold 7 7 SUF
5 301 M
(int) s
/F-gs-font 7 7 SF
17.6 301 M
( my_name_len;) s
/Courier-Bold 7 7 SUF
5 293 M
(char) s
/F-gs-font 7 7 SF
21.8 293 M
( my_name[255];) s
/Courier-Oblique 7 7 SUF
5 285 M
(// global verbose tag.) s
/F-gs-font 7 7 SF
/Courier-Bold 7 7 SUF
5 277 M
(int) s
/F-gs-font 7 7 SF
17.6 277 M
( verbose;) s
5 269 M
(#) s
/Courier-Bold 7 7 SUF
9.2 269 M
(else) s
/F-gs-font 7 7 SF
/Courier-Bold 7 7 SUF
5 261 M
(extern) s
/F-gs-font 7 7 SF
30.2 261 M
( ) s
/Courier-Bold 7 7 SUF
34.4 261 M
(int) s
/F-gs-font 7 7 SF
47 261 M
( rank;) s
/Courier-Bold 7 7 SUF
5 253 M
(extern) s
/F-gs-font 7 7 SF
30.2 253 M
( ) s
/Courier-Bold 7 7 SUF
34.4 253 M
(int) s
/F-gs-font 7 7 SF
47 253 M
( np;) s
/Courier-Bold 7 7 SUF
5 245 M
(extern) s
/F-gs-font 7 7 SF
30.2 245 M
( ) s
/Courier-Bold 7 7 SUF
34.4 245 M
(int) s
/F-gs-font 7 7 SF
47 245 M
( my_name_len;) s
/Courier-Bold 7 7 SUF
5 237 M
(extern) s
/F-gs-font 7 7 SF
30.2 237 M
( ) s
/Courier-Bold 7 7 SUF
34.4 237 M
(char) s
/F-gs-font 7 7 SF
51.2 237 M
( *my_name;) s
/Courier-Oblique 7 7 SUF
5 229 M
(// global verbose tag.) s
/F-gs-font 7 7 SF
/Courier-Bold 7 7 SUF
5 221 M
(extern) s
/F-gs-font 7 7 SF
30.2 221 M
( ) s
/Courier-Bold 7 7 SUF
34.4 221 M
(int) s
/F-gs-font 7 7 SF
47 221 M
( verbose;) s
5 213 M
(#) s
/Courier-Bold 7 7 SUF
9.2 213 M
(endif) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 197 M
(//) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 189 M
(// Conway globals) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 181 M
(//) s
/F-gs-font 7 7 SF
5 173 M
(#) s
/Courier-Bold 7 7 SUF
9.2 173 M
(ifdef) s
/F-gs-font 7 7 SF
30.2 173 M
( ) s
/Courier-Bold 7 7 SUF
34.4 173 M
(__MAIN) s
/F-gs-font 7 7 SF
/Courier-Bold 7 7 SUF
5 165 M
(int) s
/F-gs-font 7 7 SF
17.6 165 M
( nrows;          ) s
/Courier-Oblique 7 7 SUF
89 165 M
(// Number of rows in our partitioning) s
/F-gs-font 7 7 SF
/Courier-Bold 7 7 SUF
5 157 M
(int) s
/F-gs-font 7 7 SF
17.6 157 M
( ncols;          ) s
/Courier-Oblique 7 7 SUF
89 157 M
(// Number of columns in our partitioning) s
/F-gs-font 7 7 SF
/Courier-Bold 7 7 SUF
5 149 M
(int) s
/F-gs-font 7 7 SF
17.6 149 M
( my_row;         ) s
/Courier-Oblique 7 7 SUF
89 149 M
(// My row number) s
/F-gs-font 7 7 SF
/Courier-Bold 7 7 SUF
5 141 M
(int) s
/F-gs-font 7 7 SF
17.6 141 M
( my_col;         ) s
/Courier-Oblique 7 7 SUF
89 141 M
(// My column number) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 125 M
(// Local logical game size) s
/F-gs-font 7 7 SF
/Courier-Bold 7 7 SUF
5 117 M
(int) s
/F-gs-font 7 7 SF
17.6 117 M
( local_width;    ) s
/Courier-Oblique 7 7 SUF
89 117 M
(// Width and height of game on this processor) s
/F-gs-font 7 7 SF
/Courier-Bold 7 7 SUF
5 109 M
(int) s
/F-gs-font 7 7 SF
17.6 109 M
( local_height;) s
/Courier-Oblique 7 7 SUF
5 93 M
(// Local physical field size) s
/F-gs-font 7 7 SF
/Courier-Bold 7 7 SUF
5 85 M
(int) s
/F-gs-font 7 7 SF
17.6 85 M
( field_width;        ) s
/Courier-Oblique 7 7 SUF
105.8 85 M
(// Width and height of field on this processor) s
/F-gs-font 7 7 SF
/Courier-Bold 7 7 SUF
5 77 M
(int) s
/F-gs-font 7 7 SF
17.6 77 M
( field_height;       ) s
/Courier-Oblique 7 7 SUF
105.8 77 M
(// \(should be local_width+2, local_height+2\)) s
/F-gs-font 7 7 SF
/Courier-Bold 7 7 SUF
5 69 M
(int) s
/F-gs-font 7 7 SF
17.6 69 M
( *field_a = NULL;      ) s
/Courier-Oblique 7 7 SUF
114.2 69 M
(// The local data fields) s
/F-gs-font 7 7 SF
/Courier-Bold 7 7 SUF
5 61 M
(int) s
/F-gs-font 7 7 SF
17.6 61 M
( *field_b = NULL;) s
5 45 M
(#) s
/Courier-Bold 7 7 SUF
9.2 45 M
(else) s
/F-gs-font 7 7 SF
/Courier-Bold 7 7 SUF
5 37 M
(extern) s
/F-gs-font 7 7 SF
30.2 37 M
( ) s
/Courier-Bold 7 7 SUF
34.4 37 M
(int) s
/F-gs-font 7 7 SF
47 37 M
( nrows;   ) s
/Courier-Bold 7 7 SUF
5 29 M
(extern) s
/F-gs-font 7 7 SF
30.2 29 M
( ) s
/Courier-Bold 7 7 SUF
34.4 29 M
(int) s
/F-gs-font 7 7 SF
47 29 M
( ncols;   ) s
/Courier-Bold 7 7 SUF
5 21 M
(extern) s
/F-gs-font 7 7 SF
30.2 21 M
( ) s
/Courier-Bold 7 7 SUF
34.4 21 M
(int) s
/F-gs-font 7 7 SF
47 21 M
( my_row;  ) s
/Courier-Bold 7 7 SUF
5 13 M
(extern) s
/F-gs-font 7 7 SF
30.2 13 M
( ) s
/Courier-Bold 7 7 SUF
34.4 13 M
(int) s
/F-gs-font 7 7 SF
47 13 M
( my_col;  ) s
/Courier-Bold 7 7 SUF
402 501 M
(extern) s
/F-gs-font 7 7 SF
427.2 501 M
( ) s
/Courier-Bold 7 7 SUF
431.4 501 M
(int) s
/F-gs-font 7 7 SF
444 501 M
( local_width;    ) s
/Courier-Bold 7 7 SUF
402 493 M
(extern) s
/F-gs-font 7 7 SF
427.2 493 M
( ) s
/Courier-Bold 7 7 SUF
431.4 493 M
(int) s
/F-gs-font 7 7 SF
444 493 M
( local_height;) s
/Courier-Bold 7 7 SUF
402 477 M
(extern) s
/F-gs-font 7 7 SF
427.2 477 M
( ) s
/Courier-Bold 7 7 SUF
431.4 477 M
(int) s
/F-gs-font 7 7 SF
444 477 M
( field_width;) s
/Courier-Bold 7 7 SUF
402 469 M
(extern) s
/F-gs-font 7 7 SF
427.2 469 M
( ) s
/Courier-Bold 7 7 SUF
431.4 469 M
(int) s
/F-gs-font 7 7 SF
444 469 M
( field_height;) s
/Courier-Bold 7 7 SUF
402 461 M
(extern) s
/F-gs-font 7 7 SF
427.2 461 M
( ) s
/Courier-Bold 7 7 SUF
431.4 461 M
(int) s
/F-gs-font 7 7 SF
444 461 M
( *field_a;) s
/Courier-Bold 7 7 SUF
402 453 M
(extern) s
/F-gs-font 7 7 SF
427.2 453 M
( ) s
/Courier-Bold 7 7 SUF
431.4 453 M
(int) s
/F-gs-font 7 7 SF
444 453 M
( *field_b;) s
402 445 M
(#) s
/Courier-Bold 7 7 SUF
406.2 445 M
(endif) s
/F-gs-font 7 7 SF
_R
S
%%Page: (1) 8
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (pgm.h) def
/fdir (.) def
/ftail (pgm.h) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (10/05/16) def
/modtimestr (09:47:48) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
column_lines
do_header
/Courier-Bold 7 7 SUF
5 501 M
(typedef) s
/F-gs-font 7 7 SF
34.4 501 M
( ) s
/Courier-Bold 7 7 SUF
38.6 501 M
(enum) s
/F-gs-font 7 7 SF
55.4 501 M
( { false, true } bool; ) s
/Courier-Oblique 7 7 SUF
152 501 M
(// Provide C++ style 'bool' type in C) s
/F-gs-font 7 7 SF
5 493 M
(bool ) s
/Courier-Bold 7 7 SUF
26 493 M
(readpgm) s
/F-gs-font 7 7 SF
55.4 493 M
(\( ) s
/Courier-Bold 7 7 SUF
63.8 493 M
(char) s
/F-gs-font 7 7 SF
80.6 493 M
( *filename \);) s
_R
S
%%Page: (1) 9
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (pprintf.h) def
/fdir (.) def
/ftail (pprintf.h) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (10/05/16) def
/modtimestr (09:47:48) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
column_lines
do_header
/Courier-Oblique 7 7 SUF
5 501 M
(/* $Id: pprintf.h,v 1.3 2006/02/09 20:42:25 mccreary Exp $ */) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 485 M
(/*) s
5 477 M
( * Copyright \(c\) 2006 Sean McCreary <mccreary@mcwest.org>. All rights) s
5 469 M
( * reserved.) s
5 461 M
( * ) s
5 453 M
( * Redistribution and use in source and binary forms, with or without) s
5 445 M
( * modification, are permitted provided that the following conditions) s
5 437 M
( * are met:) s
5 429 M
( * ) s
5 421 M
( * 1. Redistributions of source code must retain the above copyright) s
5 413 M
( * notice, this list of conditions and the following disclaimer.) s
5 405 M
( * ) s
5 397 M
( * 2. Redistributions in binary form must reproduce the above copyright) s
5 389 M
( * notice, this list of conditions and the following disclaimer in the) s
5 381 M
( * documentation and/or other materials provided with the distribution.) s
5 373 M
( * ) s
5 365 M
( * 3. The name of the author may not be used to endorse or promote products) s
5 357 M
( * derived from this software without specific prior written permission) s
5 349 M
( * ) s
5 341 M
( * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,) s
5 333 M
( * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY) s
5 325 M
( * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL) s
5 317 M
( * THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,) s
5 309 M
( * EXEMPLARY, OR CONSEQUENTIAL DAMAGES \(INCLUDING, BUT NOT LIMITED TO,) s
5 301 M
( * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR) s
5 293 M
( * PROFITS; OR BUSINESS INTERRUPTION\) HOWEVER CAUSED AND ON ANY THEORY OF) s
5 285 M
( * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT \(INCLUDING) s
5 277 M
( * NEGLIGENCE OR OTHERWISE\) ARISING IN ANY WAY OUT OF THE USE OF THIS) s
5 269 M
( * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.) s
5 261 M
( */) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 245 M
(// Modified by Michael Oberg, 2015/10/01 to support both C or C++) s
/F-gs-font 7 7 SF
5 229 M
(#) s
/Courier-Bold 7 7 SUF
9.2 229 M
(ifdef) s
/F-gs-font 7 7 SF
30.2 229 M
( ) s
/Courier-Bold 7 7 SUF
34.4 229 M
(__cplusplus) s
/F-gs-font 7 7 SF
/Courier-Bold 7 7 SUF
5 221 M
(extern) s
/F-gs-font 7 7 SF
30.2 221 M
( ) s
/Courier-Bold 7 7 SUF
34.4 221 M
("C") s
/F-gs-font 7 7 SF
47 221 M
( ) s
/Courier-Bold 7 7 SUF
51.2 221 M
(int) s
/F-gs-font 7 7 SF
63.8 221 M
( init_pprintf\() s
/Courier-Bold 7 7 SUF
122.6 221 M
(int) s
/F-gs-font 7 7 SF
135.2 221 M
(\);) s
/Courier-Bold 7 7 SUF
5 213 M
(extern) s
/F-gs-font 7 7 SF
30.2 213 M
( ) s
/Courier-Bold 7 7 SUF
34.4 213 M
("C") s
/F-gs-font 7 7 SF
47 213 M
( ) s
/Courier-Bold 7 7 SUF
51.2 213 M
(int) s
/F-gs-font 7 7 SF
63.8 213 M
( pp_set_banner\() s
/Courier-Bold 7 7 SUF
126.8 213 M
(char) s
/F-gs-font 7 7 SF
143.6 213 M
( *\);) s
/Courier-Bold 7 7 SUF
5 205 M
(extern) s
/F-gs-font 7 7 SF
30.2 205 M
( ) s
/Courier-Bold 7 7 SUF
34.4 205 M
("C") s
/F-gs-font 7 7 SF
47 205 M
( ) s
/Courier-Bold 7 7 SUF
51.2 205 M
(int) s
/F-gs-font 7 7 SF
63.8 205 M
( pp_reset_banner\(\);) s
/Courier-Bold 7 7 SUF
5 197 M
(extern) s
/F-gs-font 7 7 SF
30.2 197 M
( ) s
/Courier-Bold 7 7 SUF
34.4 197 M
("C") s
/F-gs-font 7 7 SF
47 197 M
( ) s
/Courier-Bold 7 7 SUF
51.2 197 M
(int) s
/F-gs-font 7 7 SF
63.8 197 M
( pprintf\() s
/Courier-Bold 7 7 SUF
101.6 197 M
(char) s
/F-gs-font 7 7 SF
118.4 197 M
( *, ...\);) s
5 189 M
(#) s
/Courier-Bold 7 7 SUF
9.2 189 M
(endif) s
/F-gs-font 7 7 SF
/Courier-Bold 7 7 SUF
5 173 M
(extern) s
/F-gs-font 7 7 SF
30.2 173 M
( ) s
/Courier-Bold 7 7 SUF
34.4 173 M
(int) s
/F-gs-font 7 7 SF
47 173 M
( ) s
/Courier-Bold 7 7 SUF
51.2 173 M
(init_pprintf) s
/F-gs-font 7 7 SF
101.6 173 M
(\() s
/Courier-Bold 7 7 SUF
105.8 173 M
(int) s
/F-gs-font 7 7 SF
118.4 173 M
(\);) s
/Courier-Bold 7 7 SUF
5 165 M
(extern) s
/F-gs-font 7 7 SF
30.2 165 M
( ) s
/Courier-Bold 7 7 SUF
34.4 165 M
(int) s
/F-gs-font 7 7 SF
47 165 M
( ) s
/Courier-Bold 7 7 SUF
51.2 165 M
(pp_set_banner) s
/F-gs-font 7 7 SF
105.8 165 M
(\() s
/Courier-Bold 7 7 SUF
110 165 M
(char) s
/F-gs-font 7 7 SF
126.8 165 M
( *\);) s
/Courier-Bold 7 7 SUF
5 157 M
(extern) s
/F-gs-font 7 7 SF
30.2 157 M
( ) s
/Courier-Bold 7 7 SUF
34.4 157 M
(int) s
/F-gs-font 7 7 SF
47 157 M
( ) s
/Courier-Bold 7 7 SUF
51.2 157 M
(pp_reset_banner) s
/F-gs-font 7 7 SF
114.2 157 M
(\(\);) s
/Courier-Bold 7 7 SUF
5 149 M
(extern) s
/F-gs-font 7 7 SF
30.2 149 M
( ) s
/Courier-Bold 7 7 SUF
34.4 149 M
(int) s
/F-gs-font 7 7 SF
47 149 M
( ) s
/Courier-Bold 7 7 SUF
51.2 149 M
(pprintf) s
/F-gs-font 7 7 SF
80.6 149 M
(\() s
/Courier-Bold 7 7 SUF
84.8 149 M
(char) s
/F-gs-font 7 7 SF
101.6 149 M
( *, ...\);) s
_R
S
%%Page: (1) 10
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (makefile) def
/fdir (.) def
/ftail (makefile) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (10/05/16) def
/modtimestr (09:47:48) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
column_lines
do_header
5 501 M
(CC=mpicc) s
5 493 M
(flagGCC= -Wall -lm -lpopt) s
5 485 M
(flagIntel= -Wall -lpopt) s
5 469 M
(C_FILES = BellBrandon_Midterm1.c pgm.c pprintf.c) s
5 461 M
(O_FILES = BellBrandon_Midterm1.o pgm.o pprintf.o) s
5 453 M
(out=midterm) s
/Courier-Oblique 7 7 SUF
5 437 M
(# all assumes gcc compiler wich needs -lm flag.) s
/F-gs-font 7 7 SF
/Courier-Bold 7 7 SUF
5 429 M
(all:) s
/F-gs-font 7 7 SF
5 421 M
(        $\() s
/Courier-Bold 7 7 SUF
47 421 M
(CC) s
/F-gs-font 7 7 SF
55.4 421 M
(\) $\() s
/Courier-Bold 7 7 SUF
72.2 421 M
(flagGCC) s
/F-gs-font 7 7 SF
101.6 421 M
(\) -c $\() s
/Courier-Bold 7 7 SUF
131 421 M
(C_FILES) s
/F-gs-font 7 7 SF
160.4 421 M
(\) ) s
5 413 M
(        $\() s
/Courier-Bold 7 7 SUF
47 413 M
(CC) s
/F-gs-font 7 7 SF
55.4 413 M
(\) $\() s
/Courier-Bold 7 7 SUF
72.2 413 M
(flagGCC) s
/F-gs-font 7 7 SF
101.6 413 M
(\) $\() s
/Courier-Bold 7 7 SUF
118.4 413 M
(O_FILES) s
/F-gs-font 7 7 SF
147.8 413 M
(\) -o $\() s
/Courier-Bold 7 7 SUF
177.2 413 M
(out) s
/F-gs-font 7 7 SF
189.8 413 M
(\)1) s
/Courier-Oblique 7 7 SUF
5 397 M
(# Don't want the -lm flag on the intel complier for Stampede/Comet as they use ) s
/F-gs-font 7 7 SF
/Courier-Oblique 7 7 SUF
5 389 M
(# thier own optomised math library. ) s
/F-gs-font 7 7 SF
/Courier-Bold 7 7 SUF
5 381 M
(intel:) s
/F-gs-font 7 7 SF
5 373 M
(        $\() s
/Courier-Bold 7 7 SUF
47 373 M
(CC) s
/F-gs-font 7 7 SF
55.4 373 M
(\) $\() s
/Courier-Bold 7 7 SUF
72.2 373 M
(flagIntel) s
/F-gs-font 7 7 SF
110 373 M
(\) -c $\() s
/Courier-Bold 7 7 SUF
139.4 373 M
(C_FILES) s
/F-gs-font 7 7 SF
168.8 373 M
(\) ) s
5 365 M
(        $\() s
/Courier-Bold 7 7 SUF
47 365 M
(CC) s
/F-gs-font 7 7 SF
55.4 365 M
(\) $\() s
/Courier-Bold 7 7 SUF
72.2 365 M
(flagIntel) s
/F-gs-font 7 7 SF
110 365 M
(\) $\() s
/Courier-Bold 7 7 SUF
126.8 365 M
(O_FILES) s
/F-gs-font 7 7 SF
156.2 365 M
(\) -o $\() s
/Courier-Bold 7 7 SUF
185.6 365 M
(out) s
/F-gs-font 7 7 SF
198.2 365 M
(\)1) s
/Courier-Oblique 7 7 SUF
5 349 M
(# Just compile the main program, not the library files I grabbed.) s
/F-gs-font 7 7 SF
/Courier-Bold 7 7 SUF
5 341 M
(main:) s
/F-gs-font 7 7 SF
5 333 M
(        $\() s
/Courier-Bold 7 7 SUF
47 333 M
(CC) s
/F-gs-font 7 7 SF
55.4 333 M
(\) $\() s
/Courier-Bold 7 7 SUF
72.2 333 M
(flagGCC) s
/F-gs-font 7 7 SF
101.6 333 M
(\) -c BellBrandon_Midterm1.c) s
5 325 M
(        $\() s
/Courier-Bold 7 7 SUF
47 325 M
(CC) s
/F-gs-font 7 7 SF
55.4 325 M
(\) $\() s
/Courier-Bold 7 7 SUF
72.2 325 M
(flagGCC) s
/F-gs-font 7 7 SF
101.6 325 M
(\) $\() s
/Courier-Bold 7 7 SUF
118.4 325 M
(O_FILES) s
/F-gs-font 7 7 SF
147.8 325 M
(\) -o $\() s
/Courier-Bold 7 7 SUF
177.2 325 M
(out) s
/F-gs-font 7 7 SF
189.8 325 M
(\)1) s
/Courier-Bold 7 7 SUF
5 309 M
(clean:) s
/F-gs-font 7 7 SF
5 301 M
(        rm $\() s
/Courier-Bold 7 7 SUF
59.6 301 M
(out) s
/F-gs-font 7 7 SF
72.2 301 M
(\)* ) s
5 293 M
(        rm $\() s
/Courier-Bold 7 7 SUF
59.6 293 M
(O_FILES) s
/F-gs-font 7 7 SF
89 293 M
(\) ) s
_R
S
%%Page: (1) 11
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (.gitignore) def
/fdir (.) def
/ftail (.gitignore) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (10/05/16) def
/modtimestr (09:47:48) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
column_lines
do_header
5 501 M
(conways_input.pgm) s
5 493 M
(conways_c/) s
5 485 M
(a.out) s
5 477 M
(midterm1) s
5 469 M
(*.o) s
_R
S
%%Trailer
%%Pages: 11
%%DocumentNeededResources: font Times-Roman Courier-Oblique Courier-Bold 
%%+ font Courier Times-Bold 
%%EOF
